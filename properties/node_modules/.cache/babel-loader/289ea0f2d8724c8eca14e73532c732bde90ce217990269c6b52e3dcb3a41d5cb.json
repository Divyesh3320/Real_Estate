{"ast":null,"code":"var _jsxFileName = \"E:\\\\.net project + react\\\\Properties\\\\properties\\\\src\\\\Components\\\\PostProperty\\\\PostProperty.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostProperty() {\n  _s();\n  var _JSON$parse, _subTypesWithIds$form3;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [propertyId, setPropertyId] = useState(null);\n  const [propertyType, setPropertyType] = useState(\"\");\n  const [subType, setSubType] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [purpose, setPurpose] = useState(\"\");\n  const [dynamicFields, setDynamicFields] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ownerContactNo, setOwnerContactNo] = useState(\"\");\n  const [ownerContactEmail, setOwnerContactEmail] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [formData, setFormData] = useState({\n    propertyTypeId: \"\",\n    subTypeId: \"\",\n    cityId: \"\",\n    purpose: \"\",\n    price: \"\",\n    description: \"\",\n    ownerContactNo: \"\",\n    ownerContactEmail: \"\",\n    imageUrls: \"\",\n    address: \"\",\n    userId: ((_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.userId) || 0,\n    // Dynamic specification fields with null as default\n    bhk: null,\n    bathrooms: null,\n    balconies: null,\n    furnishingStatus: null,\n    parking: null,\n    carpetArea: null,\n    plotArea: null,\n    zoningType: null,\n    roadAccess: null,\n    totalBeds: null,\n    services: null\n  });\n  const subTypes = {\n    \"1\": [\"Apartment/Flat\", \"Independent House/Villa\"],\n    \"2\": [\"Office Space\", \"Retail/Shop Space\", \"Warehouse/Godown\"],\n    \"3\": [\"Residential Land\", \"Agricultural Land\", \"Commercial Land\", \"Industrial Plot\"],\n    \"4\": [\"Hostels\", \"PG\", \"Hotels/Resorts\", \"Apartment/Flat\", \"Independent House/Villa\"]\n  };\n  const cities = [\"Ahmedabad\", \"Surat\", \"Vadodara\", \"Rajkot\", \"Gandhinagar\", \"Bhavnagar\", \"Jamnagar\", \"Junagadh\", \"Anand\", \"Nadiad\", \"Mehsana\", \"Morbi\", \"Surendranagar\", \"Valsad\", \"Bharuch\", \"Navsari\", \"Dahod\", \"Patan\", \"Palanpur\", \"Porbandar\"];\n\n  // Define dynamic fields with their input types and labels\n  const dynamicFieldsData = {\n    \"1\": [\n    // Residential\n    {\n      name: \"bhk\",\n      label: \"BHK\",\n      type: \"number\"\n    }, {\n      name: \"bathrooms\",\n      label: \"Bathrooms\",\n      type: \"number\"\n    }, {\n      name: \"balconies\",\n      label: \"Balconies\",\n      type: \"number\"\n    }, {\n      name: \"furnishingStatus\",\n      label: \"Furnishing Status\",\n      type: \"select\",\n      options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"]\n    }, {\n      name: \"parking\",\n      label: \"Parking Available\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"2\": [\n    // Commercial\n    {\n      name: \"carpetArea\",\n      label: \"Carpet Area (sq ft)\",\n      type: \"number\"\n    }, {\n      name: \"furnishingStatus\",\n      label: \"Furnishing Status\",\n      type: \"select\",\n      options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"]\n    }, {\n      name: \"parking\",\n      label: \"Parking Available\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"3\": [\n    // Land\n    {\n      name: \"plotArea\",\n      label: \"Plot Area (sq ft)\",\n      type: \"number\"\n    }, {\n      name: \"zoningType\",\n      label: \"Zoning Type\",\n      type: \"select\",\n      options: [\"Residential\", \"Commercial\", \"Industrial\", \"Agricultural\"]\n    }, {\n      name: \"roadAccess\",\n      label: \"Road Access\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"4\": [\n    // Rental\n    {\n      name: \"totalBeds\",\n      label: \"Total Beds\",\n      type: \"number\"\n    }, {\n      name: \"services\",\n      label: \"Services\",\n      type: \"text\"\n    }]\n  };\n\n  // Property type mapping\n  const propertyTypes = {\n    1: \"Residential\",\n    2: \"Commercial\",\n    3: \"Land\",\n    4: \"Rental\"\n  };\n\n  // Property sub-type mapping with IDs\n  const subTypesWithIds = {\n    1: [{\n      id: 1,\n      name: \"Apartment/Flat\"\n    }, {\n      id: 2,\n      name: \"Independent House/Villa\"\n    }],\n    2: [{\n      id: 3,\n      name: \"Office Space\"\n    }, {\n      id: 4,\n      name: \"Retail/Shop Space\"\n    }, {\n      id: 5,\n      name: \"Warehouse/Godown\"\n    }],\n    3: [{\n      id: 6,\n      name: \"Residential Land\"\n    }, {\n      id: 7,\n      name: \"Agricultural Land\"\n    }, {\n      id: 8,\n      name: \"Commercial Land\"\n    }, {\n      id: 9,\n      name: \"Industrial Plot\"\n    }],\n    4: [{\n      id: 10,\n      name: \"Hostels\"\n    }, {\n      id: 11,\n      name: \"PG\"\n    }, {\n      id: 12,\n      name: \"Hotels/Resorts\"\n    }, {\n      id: 13,\n      name: \"Apartment/Flat\"\n    }, {\n      id: 14,\n      name: \"Independent House/Villa\"\n    }]\n  };\n\n  // Cities mapping with IDs\n  const citiesWithIds = [{\n    id: 1,\n    name: \"Ahmedabad\"\n  }, {\n    id: 2,\n    name: \"Surat\"\n  }, {\n    id: 3,\n    name: \"Vadodara\"\n  }, {\n    id: 4,\n    name: \"Rajkot\"\n  }, {\n    id: 5,\n    name: \"Gandhinagar\"\n  }, {\n    id: 6,\n    name: \"Bhavnagar\"\n  }, {\n    id: 7,\n    name: \"Jamnagar\"\n  }, {\n    id: 8,\n    name: \"Junagadh\"\n  }, {\n    id: 9,\n    name: \"Anand\"\n  }, {\n    id: 10,\n    name: \"Nadiad\"\n  }, {\n    id: 11,\n    name: \"Mehsana\"\n  }, {\n    id: 12,\n    name: \"Morbi\"\n  }, {\n    id: 13,\n    name: \"Surendranagar\"\n  }, {\n    id: 14,\n    name: \"Valsad\"\n  }, {\n    id: 15,\n    name: \"Bharuch\"\n  }, {\n    id: 16,\n    name: \"Navsari\"\n  }, {\n    id: 17,\n    name: \"Dahod\"\n  }, {\n    id: 18,\n    name: \"Patan\"\n  }, {\n    id: 19,\n    name: \"Palanpur\"\n  }, {\n    id: 20,\n    name: \"Porbandar\"\n  }];\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const editPropertyId = params.get('edit');\n    if (editPropertyId) {\n      setIsEditMode(true);\n      setPropertyId(editPropertyId);\n      fetchPropertyDetails(editPropertyId);\n    }\n  }, [location]);\n  const fetchPropertyDetails = async id => {\n    try {\n      var _propertyData$imageUr, _JSON$parse2;\n      const response = await fetch(`https://localhost:7019/api/PropertiesApi/GetPropertyById/${id}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const propertyData = await response.json();\n\n      // Set all the form fields with the fetched data\n      setPropertyType(propertyData.propertyTypeId.toString());\n      setSubType(propertyData.subTypeId.toString());\n      setPurpose(propertyData.purpose);\n      setCity(propertyData.cityId.toString());\n      setFormData({\n        propertyTypeId: propertyData.propertyTypeId.toString(),\n        subTypeId: propertyData.subTypeId.toString(),\n        cityId: propertyData.cityId.toString(),\n        purpose: propertyData.purpose,\n        price: propertyData.price.toString(),\n        description: propertyData.description,\n        ownerContactNo: propertyData.ownerContactNo,\n        ownerContactEmail: propertyData.ownerContactEmail,\n        imageUrls: ((_propertyData$imageUr = propertyData.imageUrlList) === null || _propertyData$imageUr === void 0 ? void 0 : _propertyData$imageUr.join(',')) || '',\n        address: propertyData.address,\n        userId: ((_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.userId) || 0,\n        // Handle type-specific details\n        ...(propertyData.residentialDetails && {\n          bhk: propertyData.residentialDetails.bhk,\n          bathrooms: propertyData.residentialDetails.bathrooms,\n          balconies: propertyData.residentialDetails.balconies,\n          furnishingStatus: propertyData.residentialDetails.furnishingStatus,\n          parking: propertyData.residentialDetails.parkingAvailable ? \"Yes\" : \"No\"\n        }),\n        ...(propertyData.commercialDetails && {\n          carpetArea: propertyData.commercialDetails.carpetArea,\n          furnishingStatus: propertyData.commercialDetails.furnishingStatus,\n          parking: propertyData.commercialDetails.parking ? \"Yes\" : \"No\"\n        }),\n        ...(propertyData.landDetails && {\n          plotArea: propertyData.landDetails.plotArea,\n          zoningType: propertyData.landDetails.zoningType,\n          roadAccess: propertyData.landDetails.roadAccess ? \"Yes\" : \"No\"\n        }),\n        ...(propertyData.rentalDetails && {\n          totalBeds: propertyData.rentalDetails.totalBeds,\n          services: propertyData.rentalDetails.services\n        })\n      });\n    } catch (error) {\n      console.error(\"Error fetching property details:\", error);\n      alert('Failed to fetch property details');\n    }\n  };\n  const renderDynamicFields = propertyTypeId => {\n    const fields = dynamicFieldsData[propertyTypeId] || [];\n    return fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label fw-semibold\",\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), field.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || \"\",\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: [\"Select \", field.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this) : field.type === \"multiselect\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || [],\n        onChange: handleInputChange,\n        multiple: true,\n        children: field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        className: \"form-control shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || \"\",\n        onChange: handleInputChange,\n        placeholder: `Enter ${field.label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this));\n  };\n  const handlePropertyTypeChange = e => {\n    const typeId = e.target.value;\n    setPropertyType(typeId);\n    setSubType(\"\");\n    setFormData(prev => ({\n      ...prev,\n      propertyTypeId: typeId,\n      subTypeId: \"\"\n    }));\n  };\n  const handleSubTypeChange = e => {\n    const subTypeId = e.target.value;\n    setSubType(subTypeId);\n    setDynamicFields(dynamicFieldsData[propertyType] || \"\");\n    setFormData(prev => ({\n      ...prev,\n      subTypeId: subTypeId\n    }));\n  };\n  const handleImageUpload = async e => {\n    const files = Array.from(e.target.files);\n\n    // Validate file count\n    if (files.length > 10) {\n      alert(\"You can only upload up to 10 images\");\n      return;\n    }\n\n    // Validate file types and sizes\n    const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n    const maxSize = 5 * 1024 * 1024; // 5MB\n\n    const invalidFiles = files.filter(file => {\n      if (!validTypes.includes(file.type)) {\n        alert(`File ${file.name} is not a valid image type`);\n        return true;\n      }\n      if (file.size > maxSize) {\n        alert(`File ${file.name} is too large. Maximum size is 5MB`);\n        return true;\n      }\n      return false;\n    });\n    if (invalidFiles.length > 0) {\n      return;\n    }\n    try {\n      const uploadPromises = files.map(async file => {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('upload_preset', 'ml_default2'); // Ensure this matches your preset name\n\n        console.log('Uploading file:', file.name); // Log the file being uploaded\n\n        const response = await fetch('https://api.cloudinary.com/v1_1/dfojntght/image/upload',\n        // Use the correct cloud name\n        {\n          method: 'POST',\n          body: formData\n        });\n        console.log('Response status:', response.status); // Log the response status\n\n        if (!response.ok) {\n          const errorText = await response.text(); // Read the error message\n          throw new Error(`Upload failed: ${errorText}`);\n        }\n        const data = await response.json(); // Parse the response as JSON\n        console.log('Uploaded file data:', data); // Log the parsed JSON data\n\n        return data.secure_url; // Return the secure URL of the uploaded image\n      });\n      const uploadedUrls = await Promise.all(uploadPromises);\n      setFormData(prev => ({\n        ...prev,\n        imageUrls: uploadedUrls.join(',')\n      }));\n\n      // Show success message\n      alert('Images uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      alert('Failed to upload images. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value === \"\" ? null : value\n    }));\n  };\n  const handleSubmit = async e => {\n    var _subTypesWithIds$form, _subTypesWithIds$form2, _citiesWithIds$find;\n    e.preventDefault();\n\n    // Get the property type and subtype names\n    const propertyTypeName = propertyTypes[formData.propertyTypeId];\n    const subTypeName = (_subTypesWithIds$form = subTypesWithIds[formData.propertyTypeId]) === null || _subTypesWithIds$form === void 0 ? void 0 : (_subTypesWithIds$form2 = _subTypesWithIds$form.find(st => st.id === parseInt(formData.subTypeId))) === null || _subTypesWithIds$form2 === void 0 ? void 0 : _subTypesWithIds$form2.name;\n    const cityName = (_citiesWithIds$find = citiesWithIds.find(city => city.id === parseInt(formData.cityId))) === null || _citiesWithIds$find === void 0 ? void 0 : _citiesWithIds$find.name;\n\n    // Create details objects based on property type\n    const residentialDetails = formData.propertyTypeId === \"1\" ? {\n      bhk: formData.bhk,\n      bathrooms: formData.bathrooms,\n      balconies: formData.balconies,\n      furnishingStatus: formData.furnishingStatus,\n      parkingAvailable: formData.parking === \"Yes\"\n    } : null;\n    const commercialDetails = formData.propertyTypeId === \"2\" ? {\n      carpetArea: formData.carpetArea,\n      furnishingStatus: formData.furnishingStatus,\n      parking: formData.parking\n    } : null;\n    const landDetails = formData.propertyTypeId === \"3\" ? {\n      plotArea: formData.plotArea,\n      zoningType: formData.zoningType,\n      roadAccess: formData.roadAccess === \"Yes\"\n    } : null;\n    const rentalDetails = formData.propertyTypeId === \"4\" ? {\n      totalBeds: formData.totalBeds,\n      services: formData.services\n    } : null;\n    const processedFormData = {\n      ...formData,\n      propertyId: isEditMode ? parseInt(propertyId) : undefined,\n      // Include propertyId only in edit mode\n      propertyTypeId: parseInt(formData.propertyTypeId),\n      subTypeId: parseInt(formData.subTypeId),\n      cityId: parseInt(formData.cityId),\n      price: parseFloat(formData.price),\n      address: formData.address || \"Default Address\",\n      cityName: cityName,\n      propertyTypeName: propertyTypeName,\n      subTypeName: subTypeName,\n      residentialDetails: residentialDetails,\n      rentalDetails: rentalDetails,\n      commercialDetails: commercialDetails,\n      landDetails: landDetails\n    };\n    try {\n      const url = isEditMode ? 'https://localhost:7019/api/PropertiesApi/UpdateProperty' : 'https://localhost:7019/api/PropertiesApi/AddProperty';\n      const response = await fetch(url, {\n        method: isEditMode ? 'PUT' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(processedFormData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      alert(isEditMode ? 'Property updated successfully!' : 'Property added successfully!');\n      navigate('/user-profile'); // Redirect back to user profile\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Failed to ${isEditMode ? 'update' : 'add'} property: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-0 shadow-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body p-4 p-md-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center mb-4 text-primary fw-bold\",\n              children: isEditMode ? 'Edit Property' : 'Add Property'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"propertyForm\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-house-door me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 41\n                  }, this), \"Basic Details\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Property Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      value: formData.propertyTypeId,\n                      onChange: handlePropertyTypeChange,\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Property Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 49\n                      }, this), Object.entries(propertyTypes).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: id,\n                        children: name\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Property Sub-Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      value: formData.subTypeId,\n                      onChange: handleSubTypeChange,\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Sub-Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 49\n                      }, this), (_subTypesWithIds$form3 = subTypesWithIds[formData.propertyTypeId]) === null || _subTypesWithIds$form3 === void 0 ? void 0 : _subTypesWithIds$form3.map(subType => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: subType.id,\n                        children: subType.name\n                      }, subType.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Purpose\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      name: \"purpose\",\n                      value: purpose,\n                      onChange: e => {\n                        setPurpose(e.target.value);\n                        setFormData(prev => ({\n                          ...prev,\n                          purpose: e.target.value\n                        }));\n                      },\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Purpose\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 511,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Sale\",\n                        children: \"Sale\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Rent\",\n                        children: \"Rent\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"form-control shadow-sm\",\n                      name: \"price\",\n                      value: formData.price,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter property price\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-geo-alt me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 41\n                  }, this), \"Location Details\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"City\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      name: \"cityId\",\n                      value: formData.cityId,\n                      onChange: handleInputChange,\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 546,\n                        columnNumber: 49\n                      }, this), citiesWithIds.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: city.id,\n                        children: city.name\n                      }, city.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 548,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control shadow-sm\",\n                      name: \"address\",\n                      value: formData.address || '',\n                      onChange: handleInputChange,\n                      placeholder: \"Enter property address\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-list-check me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 41\n                  }, this), \"Property Specifications\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: formData.propertyTypeId && renderDynamicFields(formData.propertyTypeId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-file-text me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 41\n                  }, this), \"Property Description\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label fw-semibold\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"form-control shadow-sm\",\n                    name: \"description\",\n                    value: formData.description,\n                    onChange: handleInputChange,\n                    rows: \"4\",\n                    placeholder: \"Enter detailed property description including features, amenities, and highlights\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 41\n                  }, this), \"Property Images\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label fw-semibold\",\n                    children: \"Upload Images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control shadow-sm\",\n                    onChange: handleImageUpload,\n                    accept: \"image/jpeg,image/png,image/jpg\",\n                    multiple: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-text mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-info-circle me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 45\n                    }, this), \"Upload up to 10 images (JPEG, PNG only, max 5MB each)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 41\n                  }, this), formData.imageUrls && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-2 fw-semibold\",\n                      children: \"Uploaded Images:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row g-2\",\n                      children: formData.imageUrls.split(',').map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3 col-6\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: url,\n                          alt: `Property ${index + 1}`,\n                          className: \"img-thumbnail\",\n                          style: {\n                            height: '150px',\n                            objectFit: 'cover'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 622,\n                          columnNumber: 61\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 621,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-person-lines-fill me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 41\n                  }, this), \"Contact Information\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Owner Contact Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"tel\",\n                      className: \"form-control shadow-sm\",\n                      name: \"ownerContactNo\",\n                      value: formData.ownerContactNo,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter contact number\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Owner Contact Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: \"form-control shadow-sm\",\n                      name: \"ownerContactEmail\",\n                      value: formData.ownerContactEmail,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter email address\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-lg w-100 fw-bold\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check2-circle me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 37\n                }, this), isEditMode ? 'Update Property' : 'Submit Property']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 9\n  }, this);\n}\n_s(PostProperty, \"+HW2YOqEWaGThvpmb46+S+bh0Do=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PostProperty;\nexport default PostProperty;\nvar _c;\n$RefreshReg$(_c, \"PostProperty\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","PostProperty","_s","_JSON$parse","_subTypesWithIds$form3","location","navigate","isEditMode","setIsEditMode","propertyId","setPropertyId","propertyType","setPropertyType","subType","setSubType","city","setCity","purpose","setPurpose","dynamicFields","setDynamicFields","description","setDescription","ownerContactNo","setOwnerContactNo","ownerContactEmail","setOwnerContactEmail","price","setPrice","formData","setFormData","propertyTypeId","subTypeId","cityId","imageUrls","address","userId","JSON","parse","localStorage","getItem","bhk","bathrooms","balconies","furnishingStatus","parking","carpetArea","plotArea","zoningType","roadAccess","totalBeds","services","subTypes","cities","dynamicFieldsData","name","label","type","options","propertyTypes","subTypesWithIds","id","citiesWithIds","params","URLSearchParams","search","editPropertyId","get","fetchPropertyDetails","_propertyData$imageUr","_JSON$parse2","response","fetch","ok","Error","status","propertyData","json","toString","imageUrlList","join","residentialDetails","parkingAvailable","commercialDetails","landDetails","rentalDetails","error","console","alert","renderDynamicFields","fields","map","field","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","handleInputChange","option","i","multiple","placeholder","handlePropertyTypeChange","e","typeId","target","prev","handleSubTypeChange","handleImageUpload","files","Array","from","length","validTypes","maxSize","invalidFiles","filter","file","includes","size","uploadPromises","FormData","append","log","method","body","errorText","text","data","secure_url","uploadedUrls","Promise","all","handleSubmit","_subTypesWithIds$form","_subTypesWithIds$form2","_citiesWithIds$find","preventDefault","propertyTypeName","subTypeName","find","st","parseInt","cityName","processedFormData","undefined","parseFloat","url","headers","stringify","message","onSubmit","required","Object","entries","rows","accept","split","src","alt","style","height","objectFit","_c","$RefreshReg$"],"sources":["E:/.net project + react/Properties/properties/src/Components/PostProperty/PostProperty.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction PostProperty() {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [propertyId, setPropertyId] = useState(null);\r\n    const [propertyType, setPropertyType] = useState(\"\");\r\n    const [subType, setSubType] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [purpose, setPurpose] = useState(\"\");\r\n    const [dynamicFields, setDynamicFields] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [ownerContactNo, setOwnerContactNo] = useState(\"\");\r\n    const [ownerContactEmail, setOwnerContactEmail] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        propertyTypeId: \"\",\r\n        subTypeId: \"\",\r\n        cityId: \"\",\r\n        purpose: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        ownerContactNo: \"\",\r\n        ownerContactEmail: \"\",\r\n        imageUrls: \"\",\r\n        address: \"\",\r\n        userId: JSON.parse(localStorage.getItem('user'))?.userId || 0,\r\n\r\n        // Dynamic specification fields with null as default\r\n        bhk: null,\r\n        bathrooms: null,\r\n        balconies: null,\r\n        furnishingStatus: null,\r\n        parking: null,\r\n        carpetArea: null,\r\n        plotArea: null,\r\n        zoningType: null,\r\n        roadAccess: null,\r\n        totalBeds: null,\r\n        services: null\r\n    });\r\n\r\n    const subTypes = {\r\n        \"1\": [\"Apartment/Flat\", \"Independent House/Villa\"],\r\n        \"2\": [\"Office Space\", \"Retail/Shop Space\", \"Warehouse/Godown\"],\r\n        \"3\": [\"Residential Land\", \"Agricultural Land\", \"Commercial Land\", \"Industrial Plot\"],\r\n        \"4\": [\"Hostels\", \"PG\", \"Hotels/Resorts\", \"Apartment/Flat\", \"Independent House/Villa\"]\r\n    };\r\n\r\n    const cities = [\r\n        \"Ahmedabad\", \"Surat\", \"Vadodara\", \"Rajkot\", \"Gandhinagar\", \"Bhavnagar\", \"Jamnagar\",\r\n        \"Junagadh\", \"Anand\", \"Nadiad\", \"Mehsana\", \"Morbi\", \"Surendranagar\", \"Valsad\",\r\n        \"Bharuch\", \"Navsari\", \"Dahod\", \"Patan\", \"Palanpur\", \"Porbandar\"\r\n    ];\r\n\r\n    // Define dynamic fields with their input types and labels\r\n    const dynamicFieldsData = {\r\n        \"1\": [ // Residential\r\n            { name: \"bhk\", label: \"BHK\", type: \"number\" },\r\n            { name: \"bathrooms\", label: \"Bathrooms\", type: \"number\" },\r\n            { name: \"balconies\", label: \"Balconies\", type: \"number\" },\r\n            { name: \"furnishingStatus\", label: \"Furnishing Status\", type: \"select\", \r\n              options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"] },\r\n            { name: \"parking\", label: \"Parking Available\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"2\": [ // Commercial\r\n            { name: \"carpetArea\", label: \"Carpet Area (sq ft)\", type: \"number\" },\r\n            { name: \"furnishingStatus\", label: \"Furnishing Status\", type: \"select\", \r\n              options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"] },\r\n            { name: \"parking\", label: \"Parking Available\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"3\": [ // Land\r\n            { name: \"plotArea\", label: \"Plot Area (sq ft)\", type: \"number\" },\r\n            { name: \"zoningType\", label: \"Zoning Type\", type: \"select\", \r\n              options: [\"Residential\", \"Commercial\", \"Industrial\", \"Agricultural\"] },\r\n            { name: \"roadAccess\", label: \"Road Access\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"4\": [ // Rental\r\n            { name: \"totalBeds\", label: \"Total Beds\", type: \"number\" },\r\n            { name: \"services\", label: \"Services\", type: \"text\" }\r\n        ]\r\n    };\r\n\r\n    // Property type mapping\r\n    const propertyTypes = {\r\n        1: \"Residential\",\r\n        2: \"Commercial\",\r\n        3: \"Land\",\r\n        4: \"Rental\"\r\n    };\r\n\r\n    // Property sub-type mapping with IDs\r\n    const subTypesWithIds = {\r\n        1: [\r\n            { id: 1, name: \"Apartment/Flat\" },\r\n            { id: 2, name: \"Independent House/Villa\" }\r\n        ],\r\n        2: [\r\n            { id: 3, name: \"Office Space\" },\r\n            { id: 4, name: \"Retail/Shop Space\" },\r\n            { id: 5, name: \"Warehouse/Godown\" }\r\n        ],\r\n        3: [\r\n            { id: 6, name: \"Residential Land\" },\r\n            { id: 7, name: \"Agricultural Land\" },\r\n            { id: 8, name: \"Commercial Land\" },\r\n            { id: 9, name: \"Industrial Plot\" }\r\n        ],\r\n        4: [\r\n            { id: 10, name: \"Hostels\" },\r\n            { id: 11, name: \"PG\" },\r\n            { id: 12, name: \"Hotels/Resorts\" },\r\n            { id: 13, name: \"Apartment/Flat\" },\r\n            { id: 14, name: \"Independent House/Villa\" }\r\n        ]\r\n    };\r\n\r\n    // Cities mapping with IDs\r\n    const citiesWithIds = [\r\n        { id: 1, name: \"Ahmedabad\" },\r\n        { id: 2, name: \"Surat\" },\r\n        { id: 3, name: \"Vadodara\" },\r\n        { id: 4, name: \"Rajkot\" },\r\n        { id: 5, name: \"Gandhinagar\" },\r\n        { id: 6, name: \"Bhavnagar\" },\r\n        { id: 7, name: \"Jamnagar\" },\r\n        { id: 8, name: \"Junagadh\" },\r\n        { id: 9, name: \"Anand\" },\r\n        { id: 10, name: \"Nadiad\" },\r\n        { id: 11, name: \"Mehsana\" },\r\n        { id: 12, name: \"Morbi\" },\r\n        { id: 13, name: \"Surendranagar\" },\r\n        { id: 14, name: \"Valsad\" },\r\n        { id: 15, name: \"Bharuch\" },\r\n        { id: 16, name: \"Navsari\" },\r\n        { id: 17, name: \"Dahod\" },\r\n        { id: 18, name: \"Patan\" },\r\n        { id: 19, name: \"Palanpur\" },\r\n        { id: 20, name: \"Porbandar\" }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const editPropertyId = params.get('edit');\r\n        \r\n        if (editPropertyId) {\r\n            setIsEditMode(true);\r\n            setPropertyId(editPropertyId);\r\n            fetchPropertyDetails(editPropertyId);\r\n        }\r\n    }, [location]);\r\n\r\n    const fetchPropertyDetails = async (id) => {\r\n        try {\r\n            const response = await fetch(\r\n                `https://localhost:7019/api/PropertiesApi/GetPropertyById/${id}`\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const propertyData = await response.json();\r\n            \r\n            // Set all the form fields with the fetched data\r\n            setPropertyType(propertyData.propertyTypeId.toString());\r\n            setSubType(propertyData.subTypeId.toString());\r\n            setPurpose(propertyData.purpose);\r\n            setCity(propertyData.cityId.toString());\r\n            \r\n            setFormData({\r\n                propertyTypeId: propertyData.propertyTypeId.toString(),\r\n                subTypeId: propertyData.subTypeId.toString(),\r\n                cityId: propertyData.cityId.toString(),\r\n                purpose: propertyData.purpose,\r\n                price: propertyData.price.toString(),\r\n                description: propertyData.description,\r\n                ownerContactNo: propertyData.ownerContactNo,\r\n                ownerContactEmail: propertyData.ownerContactEmail,\r\n                imageUrls: propertyData.imageUrlList?.join(',') || '',\r\n                address: propertyData.address,\r\n                userId: JSON.parse(localStorage.getItem('user'))?.userId || 0,\r\n\r\n                // Handle type-specific details\r\n                ...(propertyData.residentialDetails && {\r\n                    bhk: propertyData.residentialDetails.bhk,\r\n                    bathrooms: propertyData.residentialDetails.bathrooms,\r\n                    balconies: propertyData.residentialDetails.balconies,\r\n                    furnishingStatus: propertyData.residentialDetails.furnishingStatus,\r\n                    parking: propertyData.residentialDetails.parkingAvailable ? \"Yes\" : \"No\"\r\n                }),\r\n                ...(propertyData.commercialDetails && {\r\n                    carpetArea: propertyData.commercialDetails.carpetArea,\r\n                    furnishingStatus: propertyData.commercialDetails.furnishingStatus,\r\n                    parking: propertyData.commercialDetails.parking ? \"Yes\" : \"No\"\r\n                }),\r\n                ...(propertyData.landDetails && {\r\n                    plotArea: propertyData.landDetails.plotArea,\r\n                    zoningType: propertyData.landDetails.zoningType,\r\n                    roadAccess: propertyData.landDetails.roadAccess ? \"Yes\" : \"No\"\r\n                }),\r\n                ...(propertyData.rentalDetails && {\r\n                    totalBeds: propertyData.rentalDetails.totalBeds,\r\n                    services: propertyData.rentalDetails.services\r\n                })\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching property details:\", error);\r\n            alert('Failed to fetch property details');\r\n        }\r\n    };\r\n\r\n    const renderDynamicFields = (propertyTypeId) => {\r\n        const fields = dynamicFieldsData[propertyTypeId] || [];\r\n        \r\n        return fields.map((field, index) => (\r\n            <div className=\"col-md-6 mb-3\" key={index}>\r\n                <label className=\"form-label fw-semibold\">{field.label}</label>\r\n                {field.type === \"select\" ? (\r\n                    <select \r\n                        className=\"form-select shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || \"\"}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"\">Select {field.label}</option>\r\n                        {field.options.map((option, i) => (\r\n                            <option key={i} value={option}>{option}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : field.type === \"multiselect\" ? (\r\n                    <select \r\n                        className=\"form-select shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || []}\r\n                        onChange={handleInputChange}\r\n                        multiple\r\n                    >\r\n                        {field.options.map((option, i) => (\r\n                            <option key={i} value={option}>{option}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : (\r\n                    <input \r\n                        type={field.type}\r\n                        className=\"form-control shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || \"\"}\r\n                        onChange={handleInputChange}\r\n                        placeholder={`Enter ${field.label}`}\r\n                    />\r\n                )}\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const handlePropertyTypeChange = (e) => {\r\n        const typeId = e.target.value;\r\n        \r\n        setPropertyType(typeId);\r\n        setSubType(\"\");\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            propertyTypeId: typeId,\r\n            subTypeId: \"\"\r\n        }));\r\n    };\r\n\r\n    const handleSubTypeChange = (e) => {\r\n        const subTypeId = e.target.value;\r\n        setSubType(subTypeId);\r\n        setDynamicFields(dynamicFieldsData[propertyType] || \"\");\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            subTypeId: subTypeId\r\n        }));\r\n    };\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const files = Array.from(e.target.files);\r\n    \r\n        // Validate file count\r\n        if (files.length > 10) {\r\n            alert(\"You can only upload up to 10 images\");\r\n            return;\r\n        }\r\n    \r\n        // Validate file types and sizes\r\n        const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\r\n        const maxSize = 5 * 1024 * 1024; // 5MB\r\n    \r\n        const invalidFiles = files.filter(file => {\r\n            if (!validTypes.includes(file.type)) {\r\n                alert(`File ${file.name} is not a valid image type`);\r\n                return true;\r\n            }\r\n            if (file.size > maxSize) {\r\n                alert(`File ${file.name} is too large. Maximum size is 5MB`);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    \r\n        if (invalidFiles.length > 0) {\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const uploadPromises = files.map(async (file) => {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('upload_preset', 'ml_default2'); // Ensure this matches your preset name\r\n    \r\n                console.log('Uploading file:', file.name); // Log the file being uploaded\r\n    \r\n                const response = await fetch(\r\n                    'https://api.cloudinary.com/v1_1/dfojntght/image/upload', // Use the correct cloud name\r\n                    {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    }\r\n                );\r\n    \r\n                console.log('Response status:', response.status); // Log the response status\r\n    \r\n                if (!response.ok) {\r\n                    const errorText = await response.text(); // Read the error message\r\n                    throw new Error(`Upload failed: ${errorText}`);\r\n                }\r\n    \r\n                const data = await response.json(); // Parse the response as JSON\r\n                console.log('Uploaded file data:', data); // Log the parsed JSON data\r\n    \r\n                return data.secure_url; // Return the secure URL of the uploaded image\r\n            });\r\n    \r\n            const uploadedUrls = await Promise.all(uploadPromises);\r\n    \r\n            setFormData(prev => ({\r\n                ...prev,\r\n                imageUrls: uploadedUrls.join(',')\r\n            }));\r\n    \r\n            // Show success message\r\n            alert('Images uploaded successfully!');\r\n    \r\n        } catch (error) {\r\n            console.error('Error uploading images:', error);\r\n            alert('Failed to upload images. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n       \r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value === \"\" ? null : value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Get the property type and subtype names\r\n        const propertyTypeName = propertyTypes[formData.propertyTypeId];\r\n        const subTypeName = subTypesWithIds[formData.propertyTypeId]?.find(\r\n            st => st.id === parseInt(formData.subTypeId)\r\n        )?.name;\r\n        const cityName = citiesWithIds.find(\r\n            city => city.id === parseInt(formData.cityId)\r\n        )?.name;\r\n\r\n        // Create details objects based on property type\r\n        const residentialDetails = formData.propertyTypeId === \"1\" ? {\r\n            bhk: formData.bhk,\r\n            bathrooms: formData.bathrooms,\r\n            balconies: formData.balconies,\r\n            furnishingStatus: formData.furnishingStatus,\r\n            parkingAvailable: formData.parking === \"Yes\"\r\n        } : null;\r\n\r\n        const commercialDetails = formData.propertyTypeId === \"2\" ? {\r\n            carpetArea: formData.carpetArea,\r\n            furnishingStatus: formData.furnishingStatus,\r\n            parking: formData.parking\r\n        } : null;\r\n\r\n        const landDetails = formData.propertyTypeId === \"3\" ? {\r\n            plotArea: formData.plotArea,\r\n            zoningType: formData.zoningType,\r\n            roadAccess: formData.roadAccess === \"Yes\"\r\n        } : null;\r\n\r\n        const rentalDetails = formData.propertyTypeId === \"4\" ? {\r\n            totalBeds: formData.totalBeds,\r\n            services: formData.services\r\n        } : null;\r\n\r\n        const processedFormData = {\r\n            ...formData,\r\n            propertyId: isEditMode ? parseInt(propertyId) : undefined, // Include propertyId only in edit mode\r\n            propertyTypeId: parseInt(formData.propertyTypeId),\r\n            subTypeId: parseInt(formData.subTypeId),\r\n            cityId: parseInt(formData.cityId),\r\n            price: parseFloat(formData.price),\r\n            address: formData.address || \"Default Address\",\r\n            cityName: cityName,\r\n            propertyTypeName: propertyTypeName,\r\n            subTypeName: subTypeName,\r\n            residentialDetails: residentialDetails,\r\n            rentalDetails: rentalDetails,\r\n            commercialDetails: commercialDetails,\r\n            landDetails: landDetails\r\n        };\r\n\r\n        try {\r\n            const url = isEditMode \r\n                ? 'https://localhost:7019/api/PropertiesApi/UpdateProperty'\r\n                : 'https://localhost:7019/api/PropertiesApi/AddProperty';\r\n\r\n            const response = await fetch(url, {\r\n                method: isEditMode ? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(processedFormData)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            alert(isEditMode ? 'Property updated successfully!' : 'Property added successfully!');\r\n            navigate('/user-profile'); // Redirect back to user profile\r\n\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            alert(`Failed to ${isEditMode ? 'update' : 'add'} property: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"card border-0 shadow-lg\">\r\n                        <div className=\"card-body p-4 p-md-5\">\r\n                            <h2 className=\"text-center mb-4 text-primary fw-bold\">\r\n                                {isEditMode ? 'Edit Property' : 'Add Property'}\r\n                            </h2>\r\n                            <form id=\"propertyForm\" onSubmit={handleSubmit}>\r\n                                {/* Basic Property Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-house-door me-2\"></i>Basic Details\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Property Type</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\" \r\n                                                value={formData.propertyTypeId}\r\n                                                onChange={handlePropertyTypeChange}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Property Type</option>\r\n                                                {Object.entries(propertyTypes).map(([id, name]) => (\r\n                                                    <option key={id} value={id}>{name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Property Sub-Type</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\"\r\n                                                value={formData.subTypeId}\r\n                                                onChange={handleSubTypeChange}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Sub-Type</option>\r\n                                                {subTypesWithIds[formData.propertyTypeId]?.map(subType => (\r\n                                                    <option key={subType.id} value={subType.id}>\r\n                                                        {subType.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Purpose</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\" \r\n                                                name=\"purpose\"\r\n                                                value={purpose} \r\n                                                onChange={(e) => {\r\n                                                    setPurpose(e.target.value);\r\n                                                    setFormData(prev => ({\r\n                                                        ...prev,\r\n                                                        purpose: e.target.value\r\n                                                    }));\r\n                                                }} \r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Purpose</option>\r\n                                                <option value=\"Sale\">Sale</option>\r\n                                                <option value=\"Rent\">Rent</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Price</label>\r\n                                            <input \r\n                                                type=\"number\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"price\"\r\n                                                value={formData.price}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter property price\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Location Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-geo-alt me-2\"></i>Location Details\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">City</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\"\r\n                                                name=\"cityId\"\r\n                                                value={formData.cityId}\r\n                                                onChange={handleInputChange}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select City</option>\r\n                                                {citiesWithIds.map(city => (\r\n                                                    <option key={city.id} value={city.id}>\r\n                                                        {city.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"form-label fw-semibold\">Address</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"address\"\r\n                                                value={formData.address || ''}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter property address\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Property Specifications Section */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-list-check me-2\"></i>Property Specifications\r\n                                    </h5>\r\n                                    <div className=\"row\">\r\n                                        {formData.propertyTypeId && renderDynamicFields(formData.propertyTypeId)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Property Description */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-file-text me-2\"></i>Property Description\r\n                                    </h5>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label fw-semibold\">Description</label>\r\n                                        <textarea \r\n                                            className=\"form-control shadow-sm\"\r\n                                            name=\"description\"\r\n                                            value={formData.description}\r\n                                            onChange={handleInputChange}\r\n                                            rows=\"4\"\r\n                                            placeholder=\"Enter detailed property description including features, amenities, and highlights\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Media Upload */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-images me-2\"></i>Property Images\r\n                                    </h5>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label fw-semibold\">Upload Images</label>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            className=\"form-control shadow-sm\" \r\n                                            onChange={handleImageUpload}\r\n                                            accept=\"image/jpeg,image/png,image/jpg\"\r\n                                            multiple \r\n                                        />\r\n                                        <div className=\"form-text mt-2\">\r\n                                            <i className=\"bi bi-info-circle me-1\"></i>\r\n                                            Upload up to 10 images (JPEG, PNG only, max 5MB each)\r\n                                        </div>\r\n                                        {formData.imageUrls && (\r\n                                            <div className=\"mt-3\">\r\n                                                <p className=\"mb-2 fw-semibold\">Uploaded Images:</p>\r\n                                                <div className=\"row g-2\">\r\n                                                    {formData.imageUrls.split(',').map((url, index) => (\r\n                                                        <div key={index} className=\"col-md-3 col-6\">\r\n                                                            <img \r\n                                                                src={url} \r\n                                                                alt={`Property ${index + 1}`} \r\n                                                                className=\"img-thumbnail\"\r\n                                                                style={{ height: '150px', objectFit: 'cover' }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Contact Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-person-lines-fill me-2\"></i>Contact Information\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Owner Contact Number</label>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"ownerContactNo\"\r\n                                                value={formData.ownerContactNo}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter contact number\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Owner Contact Email</label>\r\n                                            <input \r\n                                                type=\"email\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"ownerContactEmail\"\r\n                                                value={formData.ownerContactEmail}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter email address\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg w-100 fw-bold\">\r\n                                    <i className=\"bi bi-check2-circle me-2\"></i>\r\n                                    {isEditMode ? 'Update Property' : 'Submit Property'}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostProperty;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}