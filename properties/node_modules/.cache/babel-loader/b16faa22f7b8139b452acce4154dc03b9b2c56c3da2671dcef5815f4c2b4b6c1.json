{"ast":null,"code":"var _jsxFileName = \"E:\\\\.net project + react\\\\Properties\\\\properties\\\\src\\\\Components\\\\PostProperty\\\\PostProperty.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostProperty() {\n  _s();\n  var _subTypesWithIds$form3;\n  const [propertyType, setPropertyType] = useState(\"\");\n  const [subType, setSubType] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [purpose, setPurpose] = useState(\"\");\n  const [dynamicFields, setDynamicFields] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ownerContactNo, setOwnerContactNo] = useState(\"\");\n  const [ownerContactEmail, setOwnerContactEmail] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [formData, setFormData] = useState({\n    propertyTypeId: \"\",\n    subTypeId: \"\",\n    cityId: \"\",\n    purpose: \"\",\n    price: \"\",\n    description: \"\",\n    ownerContactNo: \"\",\n    ownerContactEmail: \"\",\n    imageUrls: \"\",\n    address: \"\",\n    // Dynamic specification fields with null as default\n    bhk: null,\n    bathrooms: null,\n    balconies: null,\n    furnishingStatus: null,\n    parking: null,\n    carpetArea: null,\n    plotArea: null,\n    zoningType: null,\n    roadAccess: null,\n    totalBeds: null,\n    services: null\n  });\n  const subTypes = {\n    \"1\": [\"Apartment/Flat\", \"Independent House/Villa\"],\n    \"2\": [\"Office Space\", \"Retail/Shop Space\", \"Warehouse/Godown\"],\n    \"3\": [\"Residential Land\", \"Agricultural Land\", \"Commercial Land\", \"Industrial Plot\"],\n    \"4\": [\"Hostels\", \"PG\", \"Hotels/Resorts\", \"Apartment/Flat\", \"Independent House/Villa\"]\n  };\n  const cities = [\"Ahmedabad\", \"Surat\", \"Vadodara\", \"Rajkot\", \"Gandhinagar\", \"Bhavnagar\", \"Jamnagar\", \"Junagadh\", \"Anand\", \"Nadiad\", \"Mehsana\", \"Morbi\", \"Surendranagar\", \"Valsad\", \"Bharuch\", \"Navsari\", \"Dahod\", \"Patan\", \"Palanpur\", \"Porbandar\"];\n\n  // Define dynamic fields with their input types and labels\n  const dynamicFieldsData = {\n    \"1\": [\n    // Residential\n    {\n      name: \"bhk\",\n      label: \"BHK\",\n      type: \"number\"\n    }, {\n      name: \"bathrooms\",\n      label: \"Bathrooms\",\n      type: \"number\"\n    }, {\n      name: \"balconies\",\n      label: \"Balconies\",\n      type: \"number\"\n    }, {\n      name: \"furnishingStatus\",\n      label: \"Furnishing Status\",\n      type: \"select\",\n      options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"]\n    }, {\n      name: \"parking\",\n      label: \"Parking Available\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"2\": [\n    // Commercial\n    {\n      name: \"carpetArea\",\n      label: \"Carpet Area (sq ft)\",\n      type: \"number\"\n    }, {\n      name: \"furnishingStatus\",\n      label: \"Furnishing Status\",\n      type: \"select\",\n      options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"]\n    }, {\n      name: \"parking\",\n      label: \"Parking Available\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"3\": [\n    // Land\n    {\n      name: \"plotArea\",\n      label: \"Plot Area (sq ft)\",\n      type: \"number\"\n    }, {\n      name: \"zoningType\",\n      label: \"Zoning Type\",\n      type: \"select\",\n      options: [\"Residential\", \"Commercial\", \"Industrial\", \"Agricultural\"]\n    }, {\n      name: \"roadAccess\",\n      label: \"Road Access\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"4\": [\n    // Rental\n    {\n      name: \"totalBeds\",\n      label: \"Total Beds\",\n      type: \"number\"\n    }, {\n      name: \"services\",\n      label: \"Services\",\n      type: \"text\"\n    }]\n  };\n\n  // Property type mapping\n  const propertyTypes = {\n    1: \"Residential\",\n    2: \"Commercial\",\n    3: \"Land\",\n    4: \"Rental\"\n  };\n\n  // Property sub-type mapping with IDs\n  const subTypesWithIds = {\n    1: [{\n      id: 1,\n      name: \"Apartment/Flat\"\n    }, {\n      id: 2,\n      name: \"Independent House/Villa\"\n    }],\n    2: [{\n      id: 3,\n      name: \"Office Space\"\n    }, {\n      id: 4,\n      name: \"Retail/Shop Space\"\n    }, {\n      id: 5,\n      name: \"Warehouse/Godown\"\n    }],\n    3: [{\n      id: 6,\n      name: \"Residential Land\"\n    }, {\n      id: 7,\n      name: \"Agricultural Land\"\n    }, {\n      id: 8,\n      name: \"Commercial Land\"\n    }, {\n      id: 9,\n      name: \"Industrial Plot\"\n    }],\n    4: [{\n      id: 10,\n      name: \"Hostels\"\n    }, {\n      id: 11,\n      name: \"PG\"\n    }, {\n      id: 12,\n      name: \"Hotels/Resorts\"\n    }, {\n      id: 13,\n      name: \"Apartment/Flat\"\n    }, {\n      id: 14,\n      name: \"Independent House/Villa\"\n    }]\n  };\n\n  // Cities mapping with IDs\n  const citiesWithIds = [{\n    id: 1,\n    name: \"Ahmedabad\"\n  }, {\n    id: 2,\n    name: \"Surat\"\n  }, {\n    id: 3,\n    name: \"Vadodara\"\n  }, {\n    id: 4,\n    name: \"Rajkot\"\n  }, {\n    id: 5,\n    name: \"Gandhinagar\"\n  }, {\n    id: 6,\n    name: \"Bhavnagar\"\n  }, {\n    id: 7,\n    name: \"Jamnagar\"\n  }, {\n    id: 8,\n    name: \"Junagadh\"\n  }, {\n    id: 9,\n    name: \"Anand\"\n  }, {\n    id: 10,\n    name: \"Nadiad\"\n  }, {\n    id: 11,\n    name: \"Mehsana\"\n  }, {\n    id: 12,\n    name: \"Morbi\"\n  }, {\n    id: 13,\n    name: \"Surendranagar\"\n  }, {\n    id: 14,\n    name: \"Valsad\"\n  }, {\n    id: 15,\n    name: \"Bharuch\"\n  }, {\n    id: 16,\n    name: \"Navsari\"\n  }, {\n    id: 17,\n    name: \"Dahod\"\n  }, {\n    id: 18,\n    name: \"Patan\"\n  }, {\n    id: 19,\n    name: \"Palanpur\"\n  }, {\n    id: 20,\n    name: \"Porbandar\"\n  }];\n  const renderDynamicFields = propertyTypeId => {\n    const fields = dynamicFieldsData[propertyTypeId] || [];\n    return fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label fw-semibold\",\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), field.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || \"\",\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: [\"Select \", field.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this) : field.type === \"multiselect\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || [],\n        onChange: handleInputChange,\n        multiple: true,\n        children: field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        className: \"form-control shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || \"\",\n        onChange: handleInputChange,\n        placeholder: `Enter ${field.label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this));\n  };\n  const handlePropertyTypeChange = e => {\n    const typeId = e.target.value;\n    setPropertyType(typeId);\n    setSubType(\"\");\n    setFormData(prev => ({\n      ...prev,\n      propertyTypeId: typeId,\n      subTypeId: \"\"\n    }));\n  };\n  const handleSubTypeChange = e => {\n    const subTypeId = e.target.value;\n    setSubType(subTypeId);\n    setDynamicFields(dynamicFieldsData[propertyType] || \"\");\n    setFormData(prev => ({\n      ...prev,\n      subTypeId: subTypeId\n    }));\n  };\n  const handleImageUpload = async e => {\n    const files = Array.from(e.target.files);\n\n    // Validate file count\n    if (files.length > 10) {\n      alert(\"You can only upload up to 10 images\");\n      return;\n    }\n\n    // Validate file types and sizes\n    const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n    const maxSize = 5 * 1024 * 1024; // 5MB\n\n    const invalidFiles = files.filter(file => {\n      if (!validTypes.includes(file.type)) {\n        alert(`File ${file.name} is not a valid image type`);\n        return true;\n      }\n      if (file.size > maxSize) {\n        alert(`File ${file.name} is too large. Maximum size is 5MB`);\n        return true;\n      }\n      return false;\n    });\n    if (invalidFiles.length > 0) {\n      return;\n    }\n    try {\n      const uploadPromises = files.map(async file => {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('upload_preset', 'ml_default2'); // Ensure this matches your preset name\n\n        console.log('Uploading file:', file.name); // Log the file being uploaded\n\n        const response = await fetch('https://api.cloudinary.com/v1_1/dfojntght/image/upload',\n        // Use the correct cloud name\n        {\n          method: 'POST',\n          body: formData\n        });\n        console.log('Response status:', response.status); // Log the response status\n\n        if (!response.ok) {\n          const errorText = await response.text(); // Read the error message\n          throw new Error(`Upload failed: ${errorText}`);\n        }\n        const data = await response.json(); // Parse the response as JSON\n        console.log('Uploaded file data:', data); // Log the parsed JSON data\n\n        return data.secure_url; // Return the secure URL of the uploaded image\n      });\n      const uploadedUrls = await Promise.all(uploadPromises);\n      setFormData(prev => ({\n        ...prev,\n        imageUrls: uploadedUrls.join(',')\n      }));\n\n      // Show success message\n      alert('Images uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      alert('Failed to upload images. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value === \"\" ? null : value\n    }));\n  };\n  const handleSubmit = async e => {\n    var _subTypesWithIds$form, _subTypesWithIds$form2, _citiesWithIds$find;\n    e.preventDefault();\n\n    // Get the property type and subtype names\n    const propertyTypeName = propertyTypes[formData.propertyTypeId];\n    const subTypeName = (_subTypesWithIds$form = subTypesWithIds[formData.propertyTypeId]) === null || _subTypesWithIds$form === void 0 ? void 0 : (_subTypesWithIds$form2 = _subTypesWithIds$form.find(st => st.id === parseInt(formData.subTypeId))) === null || _subTypesWithIds$form2 === void 0 ? void 0 : _subTypesWithIds$form2.name;\n    const cityName = (_citiesWithIds$find = citiesWithIds.find(city => city.id === parseInt(formData.cityId))) === null || _citiesWithIds$find === void 0 ? void 0 : _citiesWithIds$find.name;\n\n    // Create details objects based on property type\n    const residentialDetails = formData.propertyTypeId === \"1\" ? {\n      bhk: formData.bhk,\n      bathrooms: formData.bathrooms,\n      balconies: formData.balconies,\n      furnishingStatus: formData.furnishingStatus,\n      parkingAvailable: formData.parking === \"Yes\"\n    } : null;\n    const commercialDetails = formData.propertyTypeId === \"2\" ? {\n      carpetArea: formData.carpetArea,\n      furnishingStatus: formData.furnishingStatus,\n      parking: formData.parking\n    } : null;\n    const landDetails = formData.propertyTypeId === \"3\" ? {\n      plotArea: formData.plotArea,\n      zoningType: formData.zoningType,\n      roadAccess: formData.roadAccess === \"Yes\"\n    } : null;\n    const rentalDetails = formData.propertyTypeId === \"4\" ? {\n      totalBeds: formData.totalBeds,\n      services: formData.services\n    } : null;\n    const processedFormData = {\n      ...formData,\n      propertyTypeId: parseInt(formData.propertyTypeId),\n      subTypeId: parseInt(formData.subTypeId),\n      cityId: parseInt(formData.cityId),\n      price: parseFloat(formData.price),\n      address: formData.address || \"Default Address\",\n      cityName: cityName,\n      propertyTypeName: propertyTypeName,\n      subTypeName: subTypeName,\n      residentialDetails: residentialDetails,\n      rentalDetails: rentalDetails,\n      commercialDetails: commercialDetails,\n      landDetails: landDetails\n    };\n    try {\n      const response = await fetch('https://localhost:7019/api/PropertiesApi/AddProperty', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json' // Add this to explicitly request JSON response\n        },\n        body: JSON.stringify(processedFormData)\n      });\n      const responseText = await response.text();\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}, message: ${responseText}`);\n      }\n\n      // If response is empty, consider it a success\n      if (!responseText.trim()) {\n        console.log('Success: Empty response');\n        alert('Property added successfully!');\n        return;\n      }\n\n      // Try to parse JSON only if we have a response\n      try {\n        const result = JSON.parse(responseText);\n        alert('Property added successfully!');\n      } catch (parseError) {\n        // If the response isn't JSON but the status was OK, still consider it a success\n        if (response.ok) {\n          console.log('Success with non-JSON response:', responseText);\n          alert('Property added successfully!');\n        } else {\n          throw new Error('Invalid response format from server');\n        }\n      }\n    } catch (error) {\n      console.error('Error details:', error);\n      alert(`Failed to add property: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-0 shadow-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body p-4 p-md-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center mb-4 text-primary fw-bold\",\n              children: \"Add Property\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"propertyForm\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-house-door me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 41\n                  }, this), \"Basic Details\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Property Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      value: formData.propertyTypeId,\n                      onChange: handlePropertyTypeChange,\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Property Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 49\n                      }, this), Object.entries(propertyTypes).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: id,\n                        children: name\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Property Sub-Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      value: formData.subTypeId,\n                      onChange: handleSubTypeChange,\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Sub-Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 424,\n                        columnNumber: 49\n                      }, this), (_subTypesWithIds$form3 = subTypesWithIds[formData.propertyTypeId]) === null || _subTypesWithIds$form3 === void 0 ? void 0 : _subTypesWithIds$form3.map(subType => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: subType.id,\n                        children: subType.name\n                      }, subType.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Purpose\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      name: \"purpose\",\n                      value: purpose,\n                      onChange: e => {\n                        setPurpose(e.target.value);\n                        setFormData(prev => ({\n                          ...prev,\n                          purpose: e.target.value\n                        }));\n                      },\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Purpose\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Sale\",\n                        children: \"Sale\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Rent\",\n                        children: \"Rent\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"form-control shadow-sm\",\n                      name: \"price\",\n                      value: formData.price,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter property price\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-geo-alt me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 41\n                  }, this), \"Location Details\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"City\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select shadow-sm\",\n                      name: \"cityId\",\n                      value: formData.cityId,\n                      onChange: handleInputChange,\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 482,\n                        columnNumber: 49\n                      }, this), citiesWithIds.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: city.id,\n                        children: city.name\n                      }, city.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control shadow-sm\",\n                      name: \"address\",\n                      value: formData.address || '',\n                      onChange: handleInputChange,\n                      placeholder: \"Enter property address\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-list-check me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 41\n                  }, this), \"Property Specifications\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: formData.propertyTypeId && renderDynamicFields(formData.propertyTypeId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-file-text me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 41\n                  }, this), \"Property Description\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label fw-semibold\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"form-control shadow-sm\",\n                    name: \"description\",\n                    value: formData.description,\n                    onChange: handleInputChange,\n                    rows: \"4\",\n                    placeholder: \"Enter detailed property description including features, amenities, and highlights\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 41\n                  }, this), \"Property Images\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label fw-semibold\",\n                    children: \"Upload Images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control shadow-sm\",\n                    onChange: handleImageUpload,\n                    accept: \"image/jpeg,image/png,image/jpg\",\n                    multiple: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-text mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-info-circle me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 45\n                    }, this), \"Upload up to 10 images (JPEG, PNG only, max 5MB each)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 41\n                  }, this), formData.imageUrls && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-2 fw-semibold\",\n                      children: \"Uploaded Images:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row g-2\",\n                      children: formData.imageUrls.split(',').map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3 col-6\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: url,\n                          alt: `Property ${index + 1}`,\n                          className: \"img-thumbnail\",\n                          style: {\n                            height: '150px',\n                            objectFit: 'cover'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 558,\n                          columnNumber: 61\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 557,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-person-lines-fill me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 41\n                  }, this), \"Contact Information\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Owner Contact Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 579,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"tel\",\n                      className: \"form-control shadow-sm\",\n                      name: \"ownerContactNo\",\n                      value: formData.ownerContactNo,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter contact number\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Owner Contact Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: \"form-control shadow-sm\",\n                      name: \"ownerContactEmail\",\n                      value: formData.ownerContactEmail,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter email address\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-lg w-100 fw-bold\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check2-circle me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 37\n                }, this), \"Submit Property\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 9\n  }, this);\n}\n_s(PostProperty, \"lx1XSdJiwzm28qJBoKHj7W8t4GE=\");\n_c = PostProperty;\nexport default PostProperty;\nvar _c;\n$RefreshReg$(_c, \"PostProperty\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostProperty","_s","_subTypesWithIds$form3","propertyType","setPropertyType","subType","setSubType","city","setCity","purpose","setPurpose","dynamicFields","setDynamicFields","description","setDescription","ownerContactNo","setOwnerContactNo","ownerContactEmail","setOwnerContactEmail","price","setPrice","formData","setFormData","propertyTypeId","subTypeId","cityId","imageUrls","address","bhk","bathrooms","balconies","furnishingStatus","parking","carpetArea","plotArea","zoningType","roadAccess","totalBeds","services","subTypes","cities","dynamicFieldsData","name","label","type","options","propertyTypes","subTypesWithIds","id","citiesWithIds","renderDynamicFields","fields","map","field","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","handleInputChange","option","i","multiple","placeholder","handlePropertyTypeChange","e","typeId","target","prev","handleSubTypeChange","handleImageUpload","files","Array","from","length","alert","validTypes","maxSize","invalidFiles","filter","file","includes","size","uploadPromises","FormData","append","console","log","response","fetch","method","body","status","ok","errorText","text","Error","data","json","secure_url","uploadedUrls","Promise","all","join","error","handleSubmit","_subTypesWithIds$form","_subTypesWithIds$form2","_citiesWithIds$find","preventDefault","propertyTypeName","subTypeName","find","st","parseInt","cityName","residentialDetails","parkingAvailable","commercialDetails","landDetails","rentalDetails","processedFormData","parseFloat","headers","JSON","stringify","responseText","trim","result","parse","parseError","message","onSubmit","required","Object","entries","rows","accept","split","url","src","alt","style","height","objectFit","_c","$RefreshReg$"],"sources":["E:/.net project + react/Properties/properties/src/Components/PostProperty/PostProperty.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction PostProperty() {\r\n    const [propertyType, setPropertyType] = useState(\"\");\r\n    const [subType, setSubType] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [purpose, setPurpose] = useState(\"\");\r\n    const [dynamicFields, setDynamicFields] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [ownerContactNo, setOwnerContactNo] = useState(\"\");\r\n    const [ownerContactEmail, setOwnerContactEmail] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        propertyTypeId: \"\",\r\n        subTypeId: \"\",\r\n        cityId: \"\",\r\n        purpose: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        ownerContactNo: \"\",\r\n        ownerContactEmail: \"\",\r\n        imageUrls: \"\",\r\n        address: \"\",\r\n\r\n        // Dynamic specification fields with null as default\r\n        bhk: null,\r\n        bathrooms: null,\r\n        balconies: null,\r\n        furnishingStatus: null,\r\n        parking: null,\r\n        carpetArea: null,\r\n        plotArea: null,\r\n        zoningType: null,\r\n        roadAccess: null,\r\n        totalBeds: null,\r\n        services: null\r\n    });\r\n\r\n    const subTypes = {\r\n        \"1\": [\"Apartment/Flat\", \"Independent House/Villa\"],\r\n        \"2\": [\"Office Space\", \"Retail/Shop Space\", \"Warehouse/Godown\"],\r\n        \"3\": [\"Residential Land\", \"Agricultural Land\", \"Commercial Land\", \"Industrial Plot\"],\r\n        \"4\": [\"Hostels\", \"PG\", \"Hotels/Resorts\", \"Apartment/Flat\", \"Independent House/Villa\"]\r\n    };\r\n\r\n    const cities = [\r\n        \"Ahmedabad\", \"Surat\", \"Vadodara\", \"Rajkot\", \"Gandhinagar\", \"Bhavnagar\", \"Jamnagar\",\r\n        \"Junagadh\", \"Anand\", \"Nadiad\", \"Mehsana\", \"Morbi\", \"Surendranagar\", \"Valsad\",\r\n        \"Bharuch\", \"Navsari\", \"Dahod\", \"Patan\", \"Palanpur\", \"Porbandar\"\r\n    ];\r\n\r\n    // Define dynamic fields with their input types and labels\r\n    const dynamicFieldsData = {\r\n        \"1\": [ // Residential\r\n            { name: \"bhk\", label: \"BHK\", type: \"number\" },\r\n            { name: \"bathrooms\", label: \"Bathrooms\", type: \"number\" },\r\n            { name: \"balconies\", label: \"Balconies\", type: \"number\" },\r\n            { name: \"furnishingStatus\", label: \"Furnishing Status\", type: \"select\", \r\n              options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"] },\r\n            { name: \"parking\", label: \"Parking Available\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"2\": [ // Commercial\r\n            { name: \"carpetArea\", label: \"Carpet Area (sq ft)\", type: \"number\" },\r\n            { name: \"furnishingStatus\", label: \"Furnishing Status\", type: \"select\", \r\n              options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"] },\r\n            { name: \"parking\", label: \"Parking Available\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"3\": [ // Land\r\n            { name: \"plotArea\", label: \"Plot Area (sq ft)\", type: \"number\" },\r\n            { name: \"zoningType\", label: \"Zoning Type\", type: \"select\", \r\n              options: [\"Residential\", \"Commercial\", \"Industrial\", \"Agricultural\"] },\r\n            { name: \"roadAccess\", label: \"Road Access\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"4\": [ // Rental\r\n            { name: \"totalBeds\", label: \"Total Beds\", type: \"number\" },\r\n            { name: \"services\", label: \"Services\", type: \"text\" }\r\n        ]\r\n    };\r\n\r\n    // Property type mapping\r\n    const propertyTypes = {\r\n        1: \"Residential\",\r\n        2: \"Commercial\",\r\n        3: \"Land\",\r\n        4: \"Rental\"\r\n    };\r\n\r\n    // Property sub-type mapping with IDs\r\n    const subTypesWithIds = {\r\n        1: [\r\n            { id: 1, name: \"Apartment/Flat\" },\r\n            { id: 2, name: \"Independent House/Villa\" }\r\n        ],\r\n        2: [\r\n            { id: 3, name: \"Office Space\" },\r\n            { id: 4, name: \"Retail/Shop Space\" },\r\n            { id: 5, name: \"Warehouse/Godown\" }\r\n        ],\r\n        3: [\r\n            { id: 6, name: \"Residential Land\" },\r\n            { id: 7, name: \"Agricultural Land\" },\r\n            { id: 8, name: \"Commercial Land\" },\r\n            { id: 9, name: \"Industrial Plot\" }\r\n        ],\r\n        4: [\r\n            { id: 10, name: \"Hostels\" },\r\n            { id: 11, name: \"PG\" },\r\n            { id: 12, name: \"Hotels/Resorts\" },\r\n            { id: 13, name: \"Apartment/Flat\" },\r\n            { id: 14, name: \"Independent House/Villa\" }\r\n        ]\r\n    };\r\n\r\n    // Cities mapping with IDs\r\n    const citiesWithIds = [\r\n        { id: 1, name: \"Ahmedabad\" },\r\n        { id: 2, name: \"Surat\" },\r\n        { id: 3, name: \"Vadodara\" },\r\n        { id: 4, name: \"Rajkot\" },\r\n        { id: 5, name: \"Gandhinagar\" },\r\n        { id: 6, name: \"Bhavnagar\" },\r\n        { id: 7, name: \"Jamnagar\" },\r\n        { id: 8, name: \"Junagadh\" },\r\n        { id: 9, name: \"Anand\" },\r\n        { id: 10, name: \"Nadiad\" },\r\n        { id: 11, name: \"Mehsana\" },\r\n        { id: 12, name: \"Morbi\" },\r\n        { id: 13, name: \"Surendranagar\" },\r\n        { id: 14, name: \"Valsad\" },\r\n        { id: 15, name: \"Bharuch\" },\r\n        { id: 16, name: \"Navsari\" },\r\n        { id: 17, name: \"Dahod\" },\r\n        { id: 18, name: \"Patan\" },\r\n        { id: 19, name: \"Palanpur\" },\r\n        { id: 20, name: \"Porbandar\" }\r\n    ];\r\n\r\n    const renderDynamicFields = (propertyTypeId) => {\r\n        const fields = dynamicFieldsData[propertyTypeId] || [];\r\n        \r\n        return fields.map((field, index) => (\r\n            <div className=\"col-md-6 mb-3\" key={index}>\r\n                <label className=\"form-label fw-semibold\">{field.label}</label>\r\n                {field.type === \"select\" ? (\r\n                    <select \r\n                        className=\"form-select shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || \"\"}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"\">Select {field.label}</option>\r\n                        {field.options.map((option, i) => (\r\n                            <option key={i} value={option}>{option}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : field.type === \"multiselect\" ? (\r\n                    <select \r\n                        className=\"form-select shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || []}\r\n                        onChange={handleInputChange}\r\n                        multiple\r\n                    >\r\n                        {field.options.map((option, i) => (\r\n                            <option key={i} value={option}>{option}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : (\r\n                    <input \r\n                        type={field.type}\r\n                        className=\"form-control shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || \"\"}\r\n                        onChange={handleInputChange}\r\n                        placeholder={`Enter ${field.label}`}\r\n                    />\r\n                )}\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const handlePropertyTypeChange = (e) => {\r\n        const typeId = e.target.value;\r\n        \r\n        setPropertyType(typeId);\r\n        setSubType(\"\");\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            propertyTypeId: typeId,\r\n            subTypeId: \"\"\r\n        }));\r\n    };\r\n\r\n    const handleSubTypeChange = (e) => {\r\n        const subTypeId = e.target.value;\r\n        setSubType(subTypeId);\r\n        setDynamicFields(dynamicFieldsData[propertyType] || \"\");\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            subTypeId: subTypeId\r\n        }));\r\n    };\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const files = Array.from(e.target.files);\r\n    \r\n        // Validate file count\r\n        if (files.length > 10) {\r\n            alert(\"You can only upload up to 10 images\");\r\n            return;\r\n        }\r\n    \r\n        // Validate file types and sizes\r\n        const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\r\n        const maxSize = 5 * 1024 * 1024; // 5MB\r\n    \r\n        const invalidFiles = files.filter(file => {\r\n            if (!validTypes.includes(file.type)) {\r\n                alert(`File ${file.name} is not a valid image type`);\r\n                return true;\r\n            }\r\n            if (file.size > maxSize) {\r\n                alert(`File ${file.name} is too large. Maximum size is 5MB`);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    \r\n        if (invalidFiles.length > 0) {\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const uploadPromises = files.map(async (file) => {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('upload_preset', 'ml_default2'); // Ensure this matches your preset name\r\n    \r\n                console.log('Uploading file:', file.name); // Log the file being uploaded\r\n    \r\n                const response = await fetch(\r\n                    'https://api.cloudinary.com/v1_1/dfojntght/image/upload', // Use the correct cloud name\r\n                    {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    }\r\n                );\r\n    \r\n                console.log('Response status:', response.status); // Log the response status\r\n    \r\n                if (!response.ok) {\r\n                    const errorText = await response.text(); // Read the error message\r\n                    throw new Error(`Upload failed: ${errorText}`);\r\n                }\r\n    \r\n                const data = await response.json(); // Parse the response as JSON\r\n                console.log('Uploaded file data:', data); // Log the parsed JSON data\r\n    \r\n                return data.secure_url; // Return the secure URL of the uploaded image\r\n            });\r\n    \r\n            const uploadedUrls = await Promise.all(uploadPromises);\r\n    \r\n            setFormData(prev => ({\r\n                ...prev,\r\n                imageUrls: uploadedUrls.join(',')\r\n            }));\r\n    \r\n            // Show success message\r\n            alert('Images uploaded successfully!');\r\n    \r\n        } catch (error) {\r\n            console.error('Error uploading images:', error);\r\n            alert('Failed to upload images. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n       \r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value === \"\" ? null : value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Get the property type and subtype names\r\n        const propertyTypeName = propertyTypes[formData.propertyTypeId];\r\n        const subTypeName = subTypesWithIds[formData.propertyTypeId]?.find(\r\n            st => st.id === parseInt(formData.subTypeId)\r\n        )?.name;\r\n        const cityName = citiesWithIds.find(\r\n            city => city.id === parseInt(formData.cityId)\r\n        )?.name;\r\n\r\n        // Create details objects based on property type\r\n        const residentialDetails = formData.propertyTypeId === \"1\" ? {\r\n            bhk: formData.bhk,\r\n            bathrooms: formData.bathrooms,\r\n            balconies: formData.balconies,\r\n            furnishingStatus: formData.furnishingStatus,\r\n            parkingAvailable: formData.parking === \"Yes\"\r\n        } : null;\r\n\r\n        const commercialDetails = formData.propertyTypeId === \"2\" ? {\r\n            carpetArea: formData.carpetArea,\r\n            furnishingStatus: formData.furnishingStatus,\r\n            parking: formData.parking\r\n        } : null;\r\n\r\n        const landDetails = formData.propertyTypeId === \"3\" ? {\r\n            plotArea: formData.plotArea,\r\n            zoningType: formData.zoningType,\r\n            roadAccess: formData.roadAccess === \"Yes\"\r\n        } : null;\r\n\r\n        const rentalDetails = formData.propertyTypeId === \"4\" ? {\r\n            totalBeds: formData.totalBeds,\r\n            services: formData.services\r\n        } : null;\r\n\r\n        const processedFormData = {\r\n            ...formData,\r\n            propertyTypeId: parseInt(formData.propertyTypeId),\r\n            subTypeId: parseInt(formData.subTypeId),\r\n            cityId: parseInt(formData.cityId),\r\n            price: parseFloat(formData.price),\r\n            address: formData.address || \"Default Address\",\r\n            cityName: cityName,\r\n            propertyTypeName: propertyTypeName,\r\n            subTypeName: subTypeName,\r\n            residentialDetails: residentialDetails,\r\n            rentalDetails: rentalDetails,\r\n            commercialDetails: commercialDetails,\r\n            landDetails: landDetails\r\n        };\r\n\r\n        try {\r\n\r\n            const response = await fetch('https://localhost:7019/api/PropertiesApi/AddProperty', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'  // Add this to explicitly request JSON response\r\n                },\r\n                body: JSON.stringify(processedFormData)\r\n            });\r\n\r\n            const responseText = await response.text();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}, message: ${responseText}`);\r\n            }\r\n\r\n            // If response is empty, consider it a success\r\n            if (!responseText.trim()) {\r\n                console.log('Success: Empty response');\r\n                alert('Property added successfully!');\r\n                return;\r\n            }\r\n\r\n            // Try to parse JSON only if we have a response\r\n            try {\r\n                const result = JSON.parse(responseText);\r\n                alert('Property added successfully!');\r\n            } catch (parseError) {\r\n                // If the response isn't JSON but the status was OK, still consider it a success\r\n                if (response.ok) {\r\n                    console.log('Success with non-JSON response:', responseText);\r\n                    alert('Property added successfully!');\r\n                } else {\r\n                    throw new Error('Invalid response format from server');\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error details:', error);\r\n            alert(`Failed to add property: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"card border-0 shadow-lg\">\r\n                        <div className=\"card-body p-4 p-md-5\">\r\n                            <h2 className=\"text-center mb-4 text-primary fw-bold\">Add Property</h2>\r\n                            <form id=\"propertyForm\" onSubmit={handleSubmit}>\r\n                                {/* Basic Property Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-house-door me-2\"></i>Basic Details\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Property Type</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\" \r\n                                                value={formData.propertyTypeId}\r\n                                                onChange={handlePropertyTypeChange}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Property Type</option>\r\n                                                {Object.entries(propertyTypes).map(([id, name]) => (\r\n                                                    <option key={id} value={id}>{name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Property Sub-Type</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\"\r\n                                                value={formData.subTypeId}\r\n                                                onChange={handleSubTypeChange}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Sub-Type</option>\r\n                                                {subTypesWithIds[formData.propertyTypeId]?.map(subType => (\r\n                                                    <option key={subType.id} value={subType.id}>\r\n                                                        {subType.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Purpose</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\" \r\n                                                name=\"purpose\"\r\n                                                value={purpose} \r\n                                                onChange={(e) => {\r\n                                                    setPurpose(e.target.value);\r\n                                                    setFormData(prev => ({\r\n                                                        ...prev,\r\n                                                        purpose: e.target.value\r\n                                                    }));\r\n                                                }} \r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Purpose</option>\r\n                                                <option value=\"Sale\">Sale</option>\r\n                                                <option value=\"Rent\">Rent</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Price</label>\r\n                                            <input \r\n                                                type=\"number\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"price\"\r\n                                                value={formData.price}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter property price\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Location Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-geo-alt me-2\"></i>Location Details\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">City</label>\r\n                                            <select \r\n                                                className=\"form-select shadow-sm\"\r\n                                                name=\"cityId\"\r\n                                                value={formData.cityId}\r\n                                                onChange={handleInputChange}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select City</option>\r\n                                                {citiesWithIds.map(city => (\r\n                                                    <option key={city.id} value={city.id}>\r\n                                                        {city.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"form-label fw-semibold\">Address</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"address\"\r\n                                                value={formData.address || ''}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter property address\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Property Specifications Section */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-list-check me-2\"></i>Property Specifications\r\n                                    </h5>\r\n                                    <div className=\"row\">\r\n                                        {formData.propertyTypeId && renderDynamicFields(formData.propertyTypeId)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Property Description */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-file-text me-2\"></i>Property Description\r\n                                    </h5>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label fw-semibold\">Description</label>\r\n                                        <textarea \r\n                                            className=\"form-control shadow-sm\"\r\n                                            name=\"description\"\r\n                                            value={formData.description}\r\n                                            onChange={handleInputChange}\r\n                                            rows=\"4\"\r\n                                            placeholder=\"Enter detailed property description including features, amenities, and highlights\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Media Upload */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-images me-2\"></i>Property Images\r\n                                    </h5>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label fw-semibold\">Upload Images</label>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            className=\"form-control shadow-sm\" \r\n                                            onChange={handleImageUpload}\r\n                                            accept=\"image/jpeg,image/png,image/jpg\"\r\n                                            multiple \r\n                                        />\r\n                                        <div className=\"form-text mt-2\">\r\n                                            <i className=\"bi bi-info-circle me-1\"></i>\r\n                                            Upload up to 10 images (JPEG, PNG only, max 5MB each)\r\n                                        </div>\r\n                                        {formData.imageUrls && (\r\n                                            <div className=\"mt-3\">\r\n                                                <p className=\"mb-2 fw-semibold\">Uploaded Images:</p>\r\n                                                <div className=\"row g-2\">\r\n                                                    {formData.imageUrls.split(',').map((url, index) => (\r\n                                                        <div key={index} className=\"col-md-3 col-6\">\r\n                                                            <img \r\n                                                                src={url} \r\n                                                                alt={`Property ${index + 1}`} \r\n                                                                className=\"img-thumbnail\"\r\n                                                                style={{ height: '150px', objectFit: 'cover' }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Contact Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-person-lines-fill me-2\"></i>Contact Information\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Owner Contact Number</label>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"ownerContactNo\"\r\n                                                value={formData.ownerContactNo}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter contact number\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Owner Contact Email</label>\r\n                                            <input \r\n                                                type=\"email\" \r\n                                                className=\"form-control shadow-sm\"\r\n                                                name=\"ownerContactEmail\"\r\n                                                value={formData.ownerContactEmail}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter email address\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg w-100 fw-bold\">\r\n                                    <i className=\"bi bi-check2-circle me-2\"></i>Submit Property\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostProperty;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}