{"ast":null,"code":"var _jsxFileName = \"E:\\\\.net project + react\\\\Properties\\\\properties\\\\src\\\\Components\\\\PostProperty\\\\PostProperty.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostProperty() {\n  _s();\n  var _JSON$parse, _subTypesWithIds$form3, _citiesWithIds$find3;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [propertyId, setPropertyId] = useState(null);\n  const [propertyType, setPropertyType] = useState(\"\");\n  const [subType, setSubType] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [purpose, setPurpose] = useState(\"\");\n  const [dynamicFields, setDynamicFields] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [ownerContactNo, setOwnerContactNo] = useState(\"\");\n  const [ownerContactEmail, setOwnerContactEmail] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [formData, setFormData] = useState({\n    propertyTypeId: \"\",\n    subTypeId: \"\",\n    cityId: \"\",\n    purpose: \"\",\n    price: \"\",\n    description: \"\",\n    ownerContactNo: \"\",\n    ownerContactEmail: \"\",\n    imageUrls: \"\",\n    address: \"\",\n    userId: ((_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.userId) || 0,\n    // Dynamic specification fields with null as default\n    bhk: null,\n    bathrooms: null,\n    balconies: null,\n    furnishingStatus: null,\n    parking: null,\n    carpetArea: null,\n    plotArea: null,\n    zoningType: null,\n    roadAccess: null,\n    totalBeds: null,\n    services: null\n  });\n  const [errors, setErrors] = useState({\n    propertyTypeId: '',\n    subTypeId: '',\n    cityId: '',\n    purpose: '',\n    price: '',\n    description: '',\n    ownerContactNo: '',\n    ownerContactEmail: '',\n    address: '',\n    imageUrls: ''\n  });\n  const [autocomplete, setAutocomplete] = useState(null);\n  const libraries = ['places'];\n  const subTypes = {\n    \"1\": [\"Apartment/Flat\", \"Independent House/Villa\"],\n    \"2\": [\"Office Space\", \"Retail/Shop Space\", \"Warehouse/Godown\"],\n    \"3\": [\"Residential Land\", \"Agricultural Land\", \"Commercial Land\", \"Industrial Plot\"],\n    \"4\": [\"Hostels\", \"PG\", \"Hotels/Resorts\", \"Apartment/Flat\", \"Independent House/Villa\"]\n  };\n  const cities = [\"Ahmedabad\", \"Surat\", \"Vadodara\", \"Rajkot\", \"Gandhinagar\", \"Bhavnagar\", \"Jamnagar\", \"Junagadh\", \"Anand\", \"Nadiad\", \"Mehsana\", \"Morbi\", \"Surendranagar\", \"Valsad\", \"Bharuch\", \"Navsari\", \"Dahod\", \"Patan\", \"Palanpur\", \"Porbandar\"];\n\n  // Define dynamic fields with their input types and labels\n  const dynamicFieldsData = {\n    \"1\": [\n    // Residential\n    {\n      name: \"bhk\",\n      label: \"BHK\",\n      type: \"number\"\n    }, {\n      name: \"bathrooms\",\n      label: \"Bathrooms\",\n      type: \"number\"\n    }, {\n      name: \"balconies\",\n      label: \"Balconies\",\n      type: \"number\"\n    }, {\n      name: \"furnishingStatus\",\n      label: \"Furnishing Status\",\n      type: \"select\",\n      options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"]\n    }, {\n      name: \"parking\",\n      label: \"Parking Available\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"2\": [\n    // Commercial\n    {\n      name: \"carpetArea\",\n      label: \"Carpet Area (sq ft)\",\n      type: \"number\"\n    }, {\n      name: \"furnishingStatus\",\n      label: \"Furnishing Status\",\n      type: \"select\",\n      options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"]\n    }, {\n      name: \"parking\",\n      label: \"Parking Available\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"3\": [\n    // Land\n    {\n      name: \"plotArea\",\n      label: \"Plot Area (sq ft)\",\n      type: \"number\"\n    }, {\n      name: \"zoningType\",\n      label: \"Zoning Type\",\n      type: \"select\",\n      options: [\"Residential\", \"Commercial\", \"Industrial\", \"Agricultural\"]\n    }, {\n      name: \"roadAccess\",\n      label: \"Road Access\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"]\n    }],\n    \"4\": [\n    // Rental\n    {\n      name: \"totalBeds\",\n      label: \"Total Beds\",\n      type: \"number\"\n    }, {\n      name: \"services\",\n      label: \"Services\",\n      type: \"text\"\n    }]\n  };\n\n  // Property type mapping\n  const propertyTypes = {\n    1: \"Residential\",\n    2: \"Commercial\",\n    3: \"Land\",\n    4: \"Rental\"\n  };\n\n  // Property sub-type mapping with IDs\n  const subTypesWithIds = {\n    1: [{\n      id: 1,\n      name: \"Apartment/Flat\"\n    }, {\n      id: 2,\n      name: \"Independent House/Villa\"\n    }],\n    2: [{\n      id: 3,\n      name: \"Office Space\"\n    }, {\n      id: 4,\n      name: \"Retail/Shop Space\"\n    }, {\n      id: 5,\n      name: \"Warehouse/Godown\"\n    }],\n    3: [{\n      id: 6,\n      name: \"Residential Land\"\n    }, {\n      id: 7,\n      name: \"Agricultural Land\"\n    }, {\n      id: 8,\n      name: \"Commercial Land\"\n    }, {\n      id: 9,\n      name: \"Industrial Plot\"\n    }],\n    4: [{\n      id: 10,\n      name: \"Hostels\"\n    }, {\n      id: 11,\n      name: \"PG\"\n    }, {\n      id: 12,\n      name: \"Hotels/Resorts\"\n    }, {\n      id: 13,\n      name: \"Apartment/Flat\"\n    }, {\n      id: 14,\n      name: \"Independent House/Villa\"\n    }]\n  };\n\n  // Cities mapping with IDs\n  const citiesWithIds = [{\n    id: 1,\n    name: \"Ahmedabad\"\n  }, {\n    id: 2,\n    name: \"Surat\"\n  }, {\n    id: 3,\n    name: \"Vadodara\"\n  }, {\n    id: 4,\n    name: \"Rajkot\"\n  }, {\n    id: 5,\n    name: \"Gandhinagar\"\n  }, {\n    id: 6,\n    name: \"Bhavnagar\"\n  }, {\n    id: 7,\n    name: \"Jamnagar\"\n  }, {\n    id: 8,\n    name: \"Junagadh\"\n  }, {\n    id: 9,\n    name: \"Anand\"\n  }, {\n    id: 10,\n    name: \"Nadiad\"\n  }, {\n    id: 11,\n    name: \"Mehsana\"\n  }, {\n    id: 12,\n    name: \"Morbi\"\n  }, {\n    id: 13,\n    name: \"Surendranagar\"\n  }, {\n    id: 14,\n    name: \"Valsad\"\n  }, {\n    id: 15,\n    name: \"Bharuch\"\n  }, {\n    id: 16,\n    name: \"Navsari\"\n  }, {\n    id: 17,\n    name: \"Dahod\"\n  }, {\n    id: 18,\n    name: \"Patan\"\n  }, {\n    id: 19,\n    name: \"Palanpur\"\n  }, {\n    id: 20,\n    name: \"Porbandar\"\n  }];\n\n  // Add this object with city bounds (you'll need to add the correct coordinates)\n  const cityBounds = {\n    \"Ahmedabad\": {\n      north: 23.1793,\n      south: 22.9675,\n      east: 72.7020,\n      west: 72.4554\n    }\n    // Add other cities...\n  };\n\n  // Add this function to get selected city bounds\n  const getSelectedCityBounds = () => {\n    var _citiesWithIds$find;\n    const selectedCity = (_citiesWithIds$find = citiesWithIds.find(city => city.id === parseInt(formData.cityId))) === null || _citiesWithIds$find === void 0 ? void 0 : _citiesWithIds$find.name;\n    return cityBounds[selectedCity] || null;\n  };\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const editPropertyId = params.get('edit');\n    if (editPropertyId) {\n      setIsEditMode(true);\n      setPropertyId(editPropertyId);\n      fetchPropertyDetails(editPropertyId);\n    }\n  }, [location]);\n  const fetchPropertyDetails = async id => {\n    try {\n      var _propertyData$imageUr, _JSON$parse2;\n      const response = await fetch(`https://localhost:7019/api/PropertiesApi/GetPropertyById/${id}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const propertyData = await response.json();\n\n      // Set all the form fields with the fetched data\n      setPropertyType(propertyData.propertyTypeId.toString());\n      setSubType(propertyData.subTypeId.toString());\n      setPurpose(propertyData.purpose);\n      setCity(propertyData.cityId.toString());\n      setFormData({\n        propertyTypeId: propertyData.propertyTypeId.toString(),\n        subTypeId: propertyData.subTypeId.toString(),\n        cityId: propertyData.cityId.toString(),\n        purpose: propertyData.purpose,\n        price: propertyData.price.toString(),\n        description: propertyData.description,\n        ownerContactNo: propertyData.ownerContactNo,\n        ownerContactEmail: propertyData.ownerContactEmail,\n        imageUrls: ((_propertyData$imageUr = propertyData.imageUrlList) === null || _propertyData$imageUr === void 0 ? void 0 : _propertyData$imageUr.join(',')) || '',\n        address: propertyData.address,\n        userId: ((_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.userId) || 0,\n        // Handle type-specific details\n        ...(propertyData.residentialDetails && {\n          bhk: propertyData.residentialDetails.bhk,\n          bathrooms: propertyData.residentialDetails.bathrooms,\n          balconies: propertyData.residentialDetails.balconies,\n          furnishingStatus: propertyData.residentialDetails.furnishingStatus,\n          parking: propertyData.residentialDetails.parkingAvailable ? \"Yes\" : \"No\"\n        }),\n        ...(propertyData.commercialDetails && {\n          carpetArea: propertyData.commercialDetails.carpetArea,\n          furnishingStatus: propertyData.commercialDetails.furnishingStatus,\n          parking: propertyData.commercialDetails.parking ? \"Yes\" : \"No\"\n        }),\n        ...(propertyData.landDetails && {\n          plotArea: propertyData.landDetails.plotArea,\n          zoningType: propertyData.landDetails.zoningType,\n          roadAccess: propertyData.landDetails.roadAccess ? \"Yes\" : \"No\"\n        }),\n        ...(propertyData.rentalDetails && {\n          totalBeds: propertyData.rentalDetails.totalBeds,\n          services: propertyData.rentalDetails.services\n        })\n      });\n    } catch (error) {\n      console.error(\"Error fetching property details:\", error);\n      alert('Failed to fetch property details');\n    }\n  };\n  const renderDynamicFields = propertyTypeId => {\n    const fields = dynamicFieldsData[propertyTypeId] || [];\n    return fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label fw-semibold\",\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), field.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || \"\",\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: [\"Select \", field.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this) : field.type === \"multiselect\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || [],\n        onChange: handleInputChange,\n        multiple: true,\n        children: field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        className: \"form-control shadow-sm\",\n        name: field.name,\n        value: formData[field.name] || \"\",\n        onChange: handleInputChange,\n        placeholder: `Enter ${field.label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this));\n  };\n  const handlePropertyTypeChange = e => {\n    const typeId = e.target.value;\n    setPropertyType(typeId);\n    setSubType(\"\");\n    setFormData(prev => ({\n      ...prev,\n      propertyTypeId: typeId,\n      subTypeId: \"\"\n    }));\n  };\n  const handleSubTypeChange = e => {\n    const subTypeId = e.target.value;\n    setSubType(subTypeId);\n    setDynamicFields(dynamicFieldsData[propertyType] || \"\");\n    setFormData(prev => ({\n      ...prev,\n      subTypeId: subTypeId\n    }));\n  };\n  const handleImageUpload = async e => {\n    const files = Array.from(e.target.files);\n\n    // Validate file count\n    if (files.length > 10) {\n      alert(\"You can only upload up to 10 images\");\n      return;\n    }\n\n    // Validate file types and sizes\n    const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n    const maxSize = 5 * 1024 * 1024; // 5MB\n\n    const invalidFiles = files.filter(file => {\n      if (!validTypes.includes(file.type)) {\n        alert(`File ${file.name} is not a valid image type`);\n        return true;\n      }\n      if (file.size > maxSize) {\n        alert(`File ${file.name} is too large. Maximum size is 5MB`);\n        return true;\n      }\n      return false;\n    });\n    if (invalidFiles.length > 0) {\n      return;\n    }\n    try {\n      const uploadPromises = files.map(async file => {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('upload_preset', 'ml_default2'); // Ensure this matches your preset name\n\n        console.log('Uploading file:', file.name); // Log the file being uploaded\n\n        const response = await fetch('https://api.cloudinary.com/v1_1/dfojntght/image/upload',\n        // Use the correct cloud name\n        {\n          method: 'POST',\n          body: formData\n        });\n        console.log('Response status:', response.status); // Log the response status\n\n        if (!response.ok) {\n          const errorText = await response.text(); // Read the error message\n          throw new Error(`Upload failed: ${errorText}`);\n        }\n        const data = await response.json(); // Parse the response as JSON\n        console.log('Uploaded file data:', data); // Log the parsed JSON data\n\n        return data.secure_url; // Return the secure URL of the uploaded image\n      });\n      const uploadedUrls = await Promise.all(uploadPromises);\n      setFormData(prev => ({\n        ...prev,\n        imageUrls: uploadedUrls.join(',')\n      }));\n\n      // Show success message\n      alert('Images uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      alert('Failed to upload images. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value === \"\" ? null : value\n    }));\n  };\n  const validateForm = () => {\n    let tempErrors = {};\n    let isValid = true;\n\n    // Basic Details validation\n    if (!formData.propertyTypeId) {\n      tempErrors.propertyTypeId = 'Property Type is required';\n      isValid = false;\n    }\n    if (!formData.subTypeId) {\n      tempErrors.subTypeId = 'Sub Type is required';\n      isValid = false;\n    }\n    if (!formData.purpose) {\n      tempErrors.purpose = 'Purpose is required';\n      isValid = false;\n    }\n    if (!formData.price) {\n      tempErrors.price = 'Price is required';\n      isValid = false;\n    } else if (formData.price <= 0) {\n      tempErrors.price = 'Price must be greater than 0';\n      isValid = false;\n    }\n\n    // Location validation\n    if (!formData.cityId) {\n      tempErrors.cityId = 'City is required';\n      isValid = false;\n    }\n    if (!formData.address || formData.address.trim() === '') {\n      tempErrors.address = 'Address is required';\n      isValid = false;\n    }\n\n    // Description validation\n    if (!formData.description || formData.description.trim() === '') {\n      tempErrors.description = 'Description is required';\n      isValid = false;\n    }\n\n    // Contact validation\n    if (!formData.ownerContactNo) {\n      tempErrors.ownerContactNo = 'Contact Number is required';\n      isValid = false;\n    } else if (!/^\\d{10}$/.test(formData.ownerContactNo)) {\n      tempErrors.ownerContactNo = 'Contact Number must be 10 digits';\n      isValid = false;\n    }\n    if (!formData.ownerContactEmail) {\n      tempErrors.ownerContactEmail = 'Email is required';\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.ownerContactEmail)) {\n      tempErrors.ownerContactEmail = 'Email is invalid';\n      isValid = false;\n    }\n\n    // Image validation\n    if (!formData.imageUrls) {\n      tempErrors.imageUrls = 'At least one image is required';\n      isValid = false;\n    }\n    setErrors(tempErrors);\n    return isValid;\n  };\n  const handleSubmit = async e => {\n    var _subTypesWithIds$form, _subTypesWithIds$form2, _citiesWithIds$find2;\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) {\n      return;\n    }\n\n    // Get the property type and subtype names\n    const propertyTypeName = propertyTypes[formData.propertyTypeId];\n    const subTypeName = (_subTypesWithIds$form = subTypesWithIds[formData.propertyTypeId]) === null || _subTypesWithIds$form === void 0 ? void 0 : (_subTypesWithIds$form2 = _subTypesWithIds$form.find(st => st.id === parseInt(formData.subTypeId))) === null || _subTypesWithIds$form2 === void 0 ? void 0 : _subTypesWithIds$form2.name;\n    const cityName = (_citiesWithIds$find2 = citiesWithIds.find(city => city.id === parseInt(formData.cityId))) === null || _citiesWithIds$find2 === void 0 ? void 0 : _citiesWithIds$find2.name;\n\n    // Create details objects based on property type\n    const residentialDetails = formData.propertyTypeId === \"1\" ? {\n      bhk: formData.bhk,\n      bathrooms: formData.bathrooms,\n      balconies: formData.balconies,\n      furnishingStatus: formData.furnishingStatus,\n      parkingAvailable: formData.parking === \"Yes\"\n    } : null;\n    const commercialDetails = formData.propertyTypeId === \"2\" ? {\n      carpetArea: formData.carpetArea,\n      furnishingStatus: formData.furnishingStatus,\n      parking: formData.parking\n    } : null;\n    const landDetails = formData.propertyTypeId === \"3\" ? {\n      plotArea: formData.plotArea,\n      zoningType: formData.zoningType,\n      roadAccess: formData.roadAccess === \"Yes\"\n    } : null;\n    const rentalDetails = formData.propertyTypeId === \"4\" ? {\n      totalBeds: formData.totalBeds,\n      services: formData.services\n    } : null;\n    const processedFormData = {\n      ...formData,\n      propertyId: isEditMode ? parseInt(propertyId) : undefined,\n      // Include propertyId only in edit mode\n      propertyTypeId: parseInt(formData.propertyTypeId),\n      subTypeId: parseInt(formData.subTypeId),\n      cityId: parseInt(formData.cityId),\n      price: parseFloat(formData.price),\n      address: formData.address || \"Default Address\",\n      cityName: cityName,\n      propertyTypeName: propertyTypeName,\n      subTypeName: subTypeName,\n      residentialDetails: residentialDetails,\n      rentalDetails: rentalDetails,\n      commercialDetails: commercialDetails,\n      landDetails: landDetails\n    };\n    try {\n      const url = isEditMode ? 'https://localhost:7019/api/PropertiesApi/UpdateProperty' : 'https://localhost:7019/api/PropertiesApi/AddProperty';\n      const response = await fetch(url, {\n        method: isEditMode ? 'PUT' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(processedFormData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      alert(isEditMode ? 'Property updated successfully!' : 'Property added successfully!');\n      navigate('/user-profile'); // This path is correct as is\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Failed to ${isEditMode ? 'update' : 'add'} property: ${error.message}`);\n    }\n  };\n  const onLoad = autocompleteInstance => {\n    setAutocomplete(autocompleteInstance);\n  };\n  const onPlaceChanged = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.formatted_address) {\n        setFormData(prev => ({\n          ...prev,\n          address: place.formatted_address\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-0 shadow-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body p-4 p-md-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center mb-4 text-primary fw-bold\",\n              children: isEditMode ? 'Edit Property' : 'Add Property'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"propertyForm\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-house-door me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 41\n                  }, this), \"Basic Details\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Property Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: `form-select shadow-sm ${errors.propertyTypeId ? 'is-invalid' : ''}`,\n                      value: formData.propertyTypeId,\n                      onChange: handlePropertyTypeChange,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Property Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 601,\n                        columnNumber: 49\n                      }, this), Object.entries(propertyTypes).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: id,\n                        children: name\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 45\n                    }, this), errors.propertyTypeId && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.propertyTypeId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Property Sub-Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: `form-select shadow-sm ${errors.subTypeId ? 'is-invalid' : ''}`,\n                      value: formData.subTypeId,\n                      onChange: handleSubTypeChange,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Sub-Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 617,\n                        columnNumber: 49\n                      }, this), (_subTypesWithIds$form3 = subTypesWithIds[formData.propertyTypeId]) === null || _subTypesWithIds$form3 === void 0 ? void 0 : _subTypesWithIds$form3.map(subType => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: subType.id,\n                        children: subType.name\n                      }, subType.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 619,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 45\n                    }, this), errors.subTypeId && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.subTypeId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Purpose\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: `form-select shadow-sm ${errors.purpose ? 'is-invalid' : ''}`,\n                      name: \"purpose\",\n                      value: purpose,\n                      onChange: e => {\n                        setPurpose(e.target.value);\n                        setFormData(prev => ({\n                          ...prev,\n                          purpose: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Purpose\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 642,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Sale\",\n                        children: \"Sale\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Rent\",\n                        children: \"Rent\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 45\n                    }, this), errors.purpose && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.purpose\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: `form-control shadow-sm ${errors.price ? 'is-invalid' : ''}`,\n                      name: \"price\",\n                      value: formData.price,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter property price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 45\n                    }, this), errors.price && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-geo-alt me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 41\n                  }, this), \"Location Details\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"City\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 674,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: `form-select shadow-sm ${errors.cityId ? 'is-invalid' : ''}`,\n                      name: \"cityId\",\n                      value: formData.cityId,\n                      onChange: handleInputChange,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 681,\n                        columnNumber: 49\n                      }, this), citiesWithIds.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: city.id,\n                        children: city.name\n                      }, city.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 683,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 45\n                    }, this), errors.cityId && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.cityId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n                      googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n                      libraries: libraries,\n                      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                        onLoad: onLoad,\n                        onPlaceChanged: onPlaceChanged,\n                        options: {\n                          componentRestrictions: {\n                            country: \"in\"\n                          },\n                          bounds: getSelectedCityBounds(),\n                          strictBounds: true,\n                          types: ['address']\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          className: `form-control shadow-sm ${errors.address ? 'is-invalid' : ''}`,\n                          placeholder: formData.cityId ? `Enter address in ${(_citiesWithIds$find3 = citiesWithIds.find(city => city.id === parseInt(formData.cityId))) === null || _citiesWithIds$find3 === void 0 ? void 0 : _citiesWithIds$find3.name}` : \"First select a city\",\n                          value: formData.address || '',\n                          onChange: e => {\n                            setFormData(prev => ({\n                              ...prev,\n                              address: e.target.value\n                            }));\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 708,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 45\n                    }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-list-check me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 41\n                  }, this), \"Property Specifications\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: formData.propertyTypeId && renderDynamicFields(formData.propertyTypeId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-file-text me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 41\n                  }, this), \"Property Description\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label fw-semibold\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: `form-control shadow-sm ${errors.description ? 'is-invalid' : ''}`,\n                    name: \"description\",\n                    value: formData.description,\n                    onChange: handleInputChange,\n                    rows: \"4\",\n                    placeholder: \"Enter detailed property description including features, amenities, and highlights\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 41\n                  }, this), errors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-images me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 766,\n                    columnNumber: 41\n                  }, this), \"Property Images\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label fw-semibold\",\n                    children: \"Upload Images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: `form-control shadow-sm ${errors.imageUrls ? 'is-invalid' : ''}`,\n                    onChange: handleImageUpload,\n                    accept: \"image/jpeg,image/png,image/jpg\",\n                    multiple: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 41\n                  }, this), errors.imageUrls && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.imageUrls\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 778,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-text mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-info-circle me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 781,\n                      columnNumber: 45\n                    }, this), \"Upload up to 10 images (JPEG, PNG only, max 5MB each)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 41\n                  }, this), formData.imageUrls && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-2 fw-semibold\",\n                      children: \"Uploaded Images:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 786,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row g-2\",\n                      children: formData.imageUrls.split(',').map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3 col-6\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: url,\n                          alt: `Property ${index + 1}`,\n                          className: \"img-thumbnail\",\n                          style: {\n                            height: '150px',\n                            objectFit: 'cover'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 790,\n                          columnNumber: 61\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 789,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 787,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-light p-4 rounded-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-4 text-secondary fw-bold\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-person-lines-fill me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 41\n                  }, this), \"Contact Information\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Owner Contact Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"tel\",\n                      className: `form-control shadow-sm ${errors.ownerContactNo ? 'is-invalid' : ''}`,\n                      name: \"ownerContactNo\",\n                      value: formData.ownerContactNo,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter contact number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 45\n                    }, this), errors.ownerContactNo && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.ownerContactNo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label fw-semibold\",\n                      children: \"Owner Contact Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 825,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: `form-control shadow-sm ${errors.ownerContactEmail ? 'is-invalid' : ''}`,\n                      name: \"ownerContactEmail\",\n                      value: formData.ownerContactEmail,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 826,\n                      columnNumber: 45\n                    }, this), errors.ownerContactEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.ownerContactEmail\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-lg w-100 fw-bold\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check2-circle me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 37\n                }, this), isEditMode ? 'Update Property' : 'Submit Property']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 579,\n    columnNumber: 9\n  }, this);\n}\n_s(PostProperty, \"zYlkpMIJti+VJkFtGRKaP0ashhM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PostProperty;\nexport default PostProperty;\nvar _c;\n$RefreshReg$(_c, \"PostProperty\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","LoadScript","Autocomplete","jsxDEV","_jsxDEV","PostProperty","_s","_JSON$parse","_subTypesWithIds$form3","_citiesWithIds$find3","location","navigate","isEditMode","setIsEditMode","propertyId","setPropertyId","propertyType","setPropertyType","subType","setSubType","city","setCity","purpose","setPurpose","dynamicFields","setDynamicFields","description","setDescription","ownerContactNo","setOwnerContactNo","ownerContactEmail","setOwnerContactEmail","price","setPrice","formData","setFormData","propertyTypeId","subTypeId","cityId","imageUrls","address","userId","JSON","parse","localStorage","getItem","bhk","bathrooms","balconies","furnishingStatus","parking","carpetArea","plotArea","zoningType","roadAccess","totalBeds","services","errors","setErrors","autocomplete","setAutocomplete","libraries","subTypes","cities","dynamicFieldsData","name","label","type","options","propertyTypes","subTypesWithIds","id","citiesWithIds","cityBounds","north","south","east","west","getSelectedCityBounds","_citiesWithIds$find","selectedCity","find","parseInt","params","URLSearchParams","search","editPropertyId","get","fetchPropertyDetails","_propertyData$imageUr","_JSON$parse2","response","fetch","ok","Error","status","propertyData","json","toString","imageUrlList","join","residentialDetails","parkingAvailable","commercialDetails","landDetails","rentalDetails","error","console","alert","renderDynamicFields","fields","map","field","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","handleInputChange","option","i","multiple","placeholder","handlePropertyTypeChange","e","typeId","target","prev","handleSubTypeChange","handleImageUpload","files","Array","from","length","validTypes","maxSize","invalidFiles","filter","file","includes","size","uploadPromises","FormData","append","log","method","body","errorText","text","data","secure_url","uploadedUrls","Promise","all","validateForm","tempErrors","isValid","trim","test","handleSubmit","_subTypesWithIds$form","_subTypesWithIds$form2","_citiesWithIds$find2","preventDefault","propertyTypeName","subTypeName","st","cityName","processedFormData","undefined","parseFloat","url","headers","stringify","message","onLoad","autocompleteInstance","onPlaceChanged","place","getPlace","formatted_address","onSubmit","Object","entries","googleMapsApiKey","componentRestrictions","country","bounds","strictBounds","types","rows","accept","split","src","alt","style","height","objectFit","_c","$RefreshReg$"],"sources":["E:/.net project + react/Properties/properties/src/Components/PostProperty/PostProperty.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { LoadScript, Autocomplete } from '@react-google-maps/api';\r\n\r\nfunction PostProperty() {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [propertyId, setPropertyId] = useState(null);\r\n    const [propertyType, setPropertyType] = useState(\"\");\r\n    const [subType, setSubType] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [purpose, setPurpose] = useState(\"\");\r\n    const [dynamicFields, setDynamicFields] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [ownerContactNo, setOwnerContactNo] = useState(\"\");\r\n    const [ownerContactEmail, setOwnerContactEmail] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        propertyTypeId: \"\",\r\n        subTypeId: \"\",\r\n        cityId: \"\",\r\n        purpose: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        ownerContactNo: \"\",\r\n        ownerContactEmail: \"\",\r\n        imageUrls: \"\",\r\n        address: \"\",\r\n        userId: JSON.parse(localStorage.getItem('user'))?.userId || 0,\r\n\r\n        // Dynamic specification fields with null as default\r\n        bhk: null,\r\n        bathrooms: null,\r\n        balconies: null,\r\n        furnishingStatus: null,\r\n        parking: null,\r\n        carpetArea: null,\r\n        plotArea: null,\r\n        zoningType: null,\r\n        roadAccess: null,\r\n        totalBeds: null,\r\n        services: null\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        propertyTypeId: '',\r\n        subTypeId: '',\r\n        cityId: '',\r\n        purpose: '',\r\n        price: '',\r\n        description: '',\r\n        ownerContactNo: '',\r\n        ownerContactEmail: '',\r\n        address: '',\r\n        imageUrls: ''\r\n    });\r\n\r\n    const [autocomplete, setAutocomplete] = useState(null);\r\n    const libraries = ['places'];\r\n\r\n    const subTypes = {\r\n        \"1\": [\"Apartment/Flat\", \"Independent House/Villa\"],\r\n        \"2\": [\"Office Space\", \"Retail/Shop Space\", \"Warehouse/Godown\"],\r\n        \"3\": [\"Residential Land\", \"Agricultural Land\", \"Commercial Land\", \"Industrial Plot\"],\r\n        \"4\": [\"Hostels\", \"PG\", \"Hotels/Resorts\", \"Apartment/Flat\", \"Independent House/Villa\"]\r\n    };\r\n\r\n    const cities = [\r\n        \"Ahmedabad\", \"Surat\", \"Vadodara\", \"Rajkot\", \"Gandhinagar\", \"Bhavnagar\", \"Jamnagar\",\r\n        \"Junagadh\", \"Anand\", \"Nadiad\", \"Mehsana\", \"Morbi\", \"Surendranagar\", \"Valsad\",\r\n        \"Bharuch\", \"Navsari\", \"Dahod\", \"Patan\", \"Palanpur\", \"Porbandar\"\r\n    ];\r\n\r\n    // Define dynamic fields with their input types and labels\r\n    const dynamicFieldsData = {\r\n        \"1\": [ // Residential\r\n            { name: \"bhk\", label: \"BHK\", type: \"number\" },\r\n            { name: \"bathrooms\", label: \"Bathrooms\", type: \"number\" },\r\n            { name: \"balconies\", label: \"Balconies\", type: \"number\" },\r\n            { name: \"furnishingStatus\", label: \"Furnishing Status\", type: \"select\", \r\n              options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"] },\r\n            { name: \"parking\", label: \"Parking Available\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"2\": [ // Commercial\r\n            { name: \"carpetArea\", label: \"Carpet Area (sq ft)\", type: \"number\" },\r\n            { name: \"furnishingStatus\", label: \"Furnishing Status\", type: \"select\", \r\n              options: [\"Unfurnished\", \"Semi-Furnished\", \"Fully Furnished\"] },\r\n            { name: \"parking\", label: \"Parking Available\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"3\": [ // Land\r\n            { name: \"plotArea\", label: \"Plot Area (sq ft)\", type: \"number\" },\r\n            { name: \"zoningType\", label: \"Zoning Type\", type: \"select\", \r\n              options: [\"Residential\", \"Commercial\", \"Industrial\", \"Agricultural\"] },\r\n            { name: \"roadAccess\", label: \"Road Access\", type: \"select\", \r\n              options: [\"Yes\", \"No\"] }\r\n        ],\r\n        \"4\": [ // Rental\r\n            { name: \"totalBeds\", label: \"Total Beds\", type: \"number\" },\r\n            { name: \"services\", label: \"Services\", type: \"text\" }\r\n        ]\r\n    };\r\n\r\n    // Property type mapping\r\n    const propertyTypes = {\r\n        1: \"Residential\",\r\n        2: \"Commercial\",\r\n        3: \"Land\",\r\n        4: \"Rental\"\r\n    };\r\n\r\n    // Property sub-type mapping with IDs\r\n    const subTypesWithIds = {\r\n        1: [\r\n            { id: 1, name: \"Apartment/Flat\" },\r\n            { id: 2, name: \"Independent House/Villa\" }\r\n        ],\r\n        2: [\r\n            { id: 3, name: \"Office Space\" },\r\n            { id: 4, name: \"Retail/Shop Space\" },\r\n            { id: 5, name: \"Warehouse/Godown\" }\r\n        ],\r\n        3: [\r\n            { id: 6, name: \"Residential Land\" },\r\n            { id: 7, name: \"Agricultural Land\" },\r\n            { id: 8, name: \"Commercial Land\" },\r\n            { id: 9, name: \"Industrial Plot\" }\r\n        ],\r\n        4: [\r\n            { id: 10, name: \"Hostels\" },\r\n            { id: 11, name: \"PG\" },\r\n            { id: 12, name: \"Hotels/Resorts\" },\r\n            { id: 13, name: \"Apartment/Flat\" },\r\n            { id: 14, name: \"Independent House/Villa\" }\r\n        ]\r\n    };\r\n\r\n    // Cities mapping with IDs\r\n    const citiesWithIds = [\r\n        { id: 1, name: \"Ahmedabad\" },\r\n        { id: 2, name: \"Surat\" },\r\n        { id: 3, name: \"Vadodara\" },\r\n        { id: 4, name: \"Rajkot\" },\r\n        { id: 5, name: \"Gandhinagar\" },\r\n        { id: 6, name: \"Bhavnagar\" },\r\n        { id: 7, name: \"Jamnagar\" },\r\n        { id: 8, name: \"Junagadh\" },\r\n        { id: 9, name: \"Anand\" },\r\n        { id: 10, name: \"Nadiad\" },\r\n        { id: 11, name: \"Mehsana\" },\r\n        { id: 12, name: \"Morbi\" },\r\n        { id: 13, name: \"Surendranagar\" },\r\n        { id: 14, name: \"Valsad\" },\r\n        { id: 15, name: \"Bharuch\" },\r\n        { id: 16, name: \"Navsari\" },\r\n        { id: 17, name: \"Dahod\" },\r\n        { id: 18, name: \"Patan\" },\r\n        { id: 19, name: \"Palanpur\" },\r\n        { id: 20, name: \"Porbandar\" }\r\n    ];\r\n\r\n    // Add this object with city bounds (you'll need to add the correct coordinates)\r\n    const cityBounds = {\r\n        \"Ahmedabad\": {\r\n            north: 23.1793,\r\n            south: 22.9675,\r\n            east: 72.7020,\r\n            west: 72.4554\r\n        },\r\n        // Add other cities...\r\n    };\r\n\r\n    // Add this function to get selected city bounds\r\n    const getSelectedCityBounds = () => {\r\n        const selectedCity = citiesWithIds.find(city => \r\n            city.id === parseInt(formData.cityId))?.name;\r\n        return cityBounds[selectedCity] || null;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const editPropertyId = params.get('edit');\r\n        \r\n        if (editPropertyId) {\r\n            setIsEditMode(true);\r\n            setPropertyId(editPropertyId);\r\n            fetchPropertyDetails(editPropertyId);\r\n        }\r\n    }, [location]);\r\n\r\n    const fetchPropertyDetails = async (id) => {\r\n        try {\r\n            const response = await fetch(\r\n                `https://localhost:7019/api/PropertiesApi/GetPropertyById/${id}`\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const propertyData = await response.json();\r\n            \r\n            // Set all the form fields with the fetched data\r\n            setPropertyType(propertyData.propertyTypeId.toString());\r\n            setSubType(propertyData.subTypeId.toString());\r\n            setPurpose(propertyData.purpose);\r\n            setCity(propertyData.cityId.toString());\r\n            \r\n            setFormData({\r\n                propertyTypeId: propertyData.propertyTypeId.toString(),\r\n                subTypeId: propertyData.subTypeId.toString(),\r\n                cityId: propertyData.cityId.toString(),\r\n                purpose: propertyData.purpose,\r\n                price: propertyData.price.toString(),\r\n                description: propertyData.description,\r\n                ownerContactNo: propertyData.ownerContactNo,\r\n                ownerContactEmail: propertyData.ownerContactEmail,\r\n                imageUrls: propertyData.imageUrlList?.join(',') || '',\r\n                address: propertyData.address,\r\n                userId: JSON.parse(localStorage.getItem('user'))?.userId || 0,\r\n\r\n                // Handle type-specific details\r\n                ...(propertyData.residentialDetails && {\r\n                    bhk: propertyData.residentialDetails.bhk,\r\n                    bathrooms: propertyData.residentialDetails.bathrooms,\r\n                    balconies: propertyData.residentialDetails.balconies,\r\n                    furnishingStatus: propertyData.residentialDetails.furnishingStatus,\r\n                    parking: propertyData.residentialDetails.parkingAvailable ? \"Yes\" : \"No\"\r\n                }),\r\n                ...(propertyData.commercialDetails && {\r\n                    carpetArea: propertyData.commercialDetails.carpetArea,\r\n                    furnishingStatus: propertyData.commercialDetails.furnishingStatus,\r\n                    parking: propertyData.commercialDetails.parking ? \"Yes\" : \"No\"\r\n                }),\r\n                ...(propertyData.landDetails && {\r\n                    plotArea: propertyData.landDetails.plotArea,\r\n                    zoningType: propertyData.landDetails.zoningType,\r\n                    roadAccess: propertyData.landDetails.roadAccess ? \"Yes\" : \"No\"\r\n                }),\r\n                ...(propertyData.rentalDetails && {\r\n                    totalBeds: propertyData.rentalDetails.totalBeds,\r\n                    services: propertyData.rentalDetails.services\r\n                })\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching property details:\", error);\r\n            alert('Failed to fetch property details');\r\n        }\r\n    };\r\n\r\n    const renderDynamicFields = (propertyTypeId) => {\r\n        const fields = dynamicFieldsData[propertyTypeId] || [];\r\n        \r\n        return fields.map((field, index) => (\r\n            <div className=\"col-md-6 mb-3\" key={index}>\r\n                <label className=\"form-label fw-semibold\">{field.label}</label>\r\n                {field.type === \"select\" ? (\r\n                    <select \r\n                        className=\"form-select shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || \"\"}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"\">Select {field.label}</option>\r\n                        {field.options.map((option, i) => (\r\n                            <option key={i} value={option}>{option}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : field.type === \"multiselect\" ? (\r\n                    <select \r\n                        className=\"form-select shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || []}\r\n                        onChange={handleInputChange}\r\n                        multiple\r\n                    >\r\n                        {field.options.map((option, i) => (\r\n                            <option key={i} value={option}>{option}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : (\r\n                    <input \r\n                        type={field.type}\r\n                        className=\"form-control shadow-sm\"\r\n                        name={field.name}\r\n                        value={formData[field.name] || \"\"}\r\n                        onChange={handleInputChange}\r\n                        placeholder={`Enter ${field.label}`}\r\n                    />\r\n                )}\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const handlePropertyTypeChange = (e) => {\r\n        const typeId = e.target.value;\r\n        \r\n        setPropertyType(typeId);\r\n        setSubType(\"\");\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            propertyTypeId: typeId,\r\n            subTypeId: \"\"\r\n        }));\r\n    };\r\n\r\n    const handleSubTypeChange = (e) => {\r\n        const subTypeId = e.target.value;\r\n        setSubType(subTypeId);\r\n        setDynamicFields(dynamicFieldsData[propertyType] || \"\");\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            subTypeId: subTypeId\r\n        }));\r\n    };\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const files = Array.from(e.target.files);\r\n    \r\n        // Validate file count\r\n        if (files.length > 10) {\r\n            alert(\"You can only upload up to 10 images\");\r\n            return;\r\n        }\r\n    \r\n        // Validate file types and sizes\r\n        const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];\r\n        const maxSize = 5 * 1024 * 1024; // 5MB\r\n    \r\n        const invalidFiles = files.filter(file => {\r\n            if (!validTypes.includes(file.type)) {\r\n                alert(`File ${file.name} is not a valid image type`);\r\n                return true;\r\n            }\r\n            if (file.size > maxSize) {\r\n                alert(`File ${file.name} is too large. Maximum size is 5MB`);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    \r\n        if (invalidFiles.length > 0) {\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const uploadPromises = files.map(async (file) => {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('upload_preset', 'ml_default2'); // Ensure this matches your preset name\r\n    \r\n                console.log('Uploading file:', file.name); // Log the file being uploaded\r\n    \r\n                const response = await fetch(\r\n                    'https://api.cloudinary.com/v1_1/dfojntght/image/upload', // Use the correct cloud name\r\n                    {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    }\r\n                );\r\n    \r\n                console.log('Response status:', response.status); // Log the response status\r\n    \r\n                if (!response.ok) {\r\n                    const errorText = await response.text(); // Read the error message\r\n                    throw new Error(`Upload failed: ${errorText}`);\r\n                }\r\n    \r\n                const data = await response.json(); // Parse the response as JSON\r\n                console.log('Uploaded file data:', data); // Log the parsed JSON data\r\n    \r\n                return data.secure_url; // Return the secure URL of the uploaded image\r\n            });\r\n    \r\n            const uploadedUrls = await Promise.all(uploadPromises);\r\n    \r\n            setFormData(prev => ({\r\n                ...prev,\r\n                imageUrls: uploadedUrls.join(',')\r\n            }));\r\n    \r\n            // Show success message\r\n            alert('Images uploaded successfully!');\r\n    \r\n        } catch (error) {\r\n            console.error('Error uploading images:', error);\r\n            alert('Failed to upload images. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n       \r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value === \"\" ? null : value\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let tempErrors = {};\r\n        let isValid = true;\r\n\r\n        // Basic Details validation\r\n        if (!formData.propertyTypeId) {\r\n            tempErrors.propertyTypeId = 'Property Type is required';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.subTypeId) {\r\n            tempErrors.subTypeId = 'Sub Type is required';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.purpose) {\r\n            tempErrors.purpose = 'Purpose is required';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.price) {\r\n            tempErrors.price = 'Price is required';\r\n            isValid = false;\r\n        } else if (formData.price <= 0) {\r\n            tempErrors.price = 'Price must be greater than 0';\r\n            isValid = false;\r\n        }\r\n\r\n        // Location validation\r\n        if (!formData.cityId) {\r\n            tempErrors.cityId = 'City is required';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.address || formData.address.trim() === '') {\r\n            tempErrors.address = 'Address is required';\r\n            isValid = false;\r\n        }\r\n\r\n        // Description validation\r\n        if (!formData.description || formData.description.trim() === '') {\r\n            tempErrors.description = 'Description is required';\r\n            isValid = false;\r\n        }\r\n\r\n        // Contact validation\r\n        if (!formData.ownerContactNo) {\r\n            tempErrors.ownerContactNo = 'Contact Number is required';\r\n            isValid = false;\r\n        } else if (!/^\\d{10}$/.test(formData.ownerContactNo)) {\r\n            tempErrors.ownerContactNo = 'Contact Number must be 10 digits';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.ownerContactEmail) {\r\n            tempErrors.ownerContactEmail = 'Email is required';\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.ownerContactEmail)) {\r\n            tempErrors.ownerContactEmail = 'Email is invalid';\r\n            isValid = false;\r\n        }\r\n\r\n        // Image validation\r\n        if (!formData.imageUrls) {\r\n            tempErrors.imageUrls = 'At least one image is required';\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(tempErrors);\r\n        return isValid;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validate form before submission\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        // Get the property type and subtype names\r\n        const propertyTypeName = propertyTypes[formData.propertyTypeId];\r\n        const subTypeName = subTypesWithIds[formData.propertyTypeId]?.find(\r\n            st => st.id === parseInt(formData.subTypeId)\r\n        )?.name;\r\n        const cityName = citiesWithIds.find(\r\n            city => city.id === parseInt(formData.cityId)\r\n        )?.name;\r\n\r\n        // Create details objects based on property type\r\n        const residentialDetails = formData.propertyTypeId === \"1\" ? {\r\n            bhk: formData.bhk,\r\n            bathrooms: formData.bathrooms,\r\n            balconies: formData.balconies,\r\n            furnishingStatus: formData.furnishingStatus,\r\n            parkingAvailable: formData.parking === \"Yes\"\r\n        } : null;\r\n\r\n        const commercialDetails = formData.propertyTypeId === \"2\" ? {\r\n            carpetArea: formData.carpetArea,\r\n            furnishingStatus: formData.furnishingStatus,\r\n            parking: formData.parking\r\n        } : null;\r\n\r\n        const landDetails = formData.propertyTypeId === \"3\" ? {\r\n            plotArea: formData.plotArea,\r\n            zoningType: formData.zoningType,\r\n            roadAccess: formData.roadAccess === \"Yes\"\r\n        } : null;\r\n\r\n        const rentalDetails = formData.propertyTypeId === \"4\" ? {\r\n            totalBeds: formData.totalBeds,\r\n            services: formData.services\r\n        } : null;\r\n\r\n        const processedFormData = {\r\n            ...formData,\r\n            propertyId: isEditMode ? parseInt(propertyId) : undefined, // Include propertyId only in edit mode\r\n            propertyTypeId: parseInt(formData.propertyTypeId),\r\n            subTypeId: parseInt(formData.subTypeId),\r\n            cityId: parseInt(formData.cityId),\r\n            price: parseFloat(formData.price),\r\n            address: formData.address || \"Default Address\",\r\n            cityName: cityName,\r\n            propertyTypeName: propertyTypeName,\r\n            subTypeName: subTypeName,\r\n            residentialDetails: residentialDetails,\r\n            rentalDetails: rentalDetails,\r\n            commercialDetails: commercialDetails,\r\n            landDetails: landDetails\r\n        };\r\n\r\n        try {\r\n            const url = isEditMode \r\n                ? 'https://localhost:7019/api/PropertiesApi/UpdateProperty'\r\n                : 'https://localhost:7019/api/PropertiesApi/AddProperty';\r\n\r\n            const response = await fetch(url, {\r\n                method: isEditMode ? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(processedFormData)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            alert(isEditMode ? 'Property updated successfully!' : 'Property added successfully!');\r\n            navigate('/user-profile');  // This path is correct as is\r\n\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            alert(`Failed to ${isEditMode ? 'update' : 'add'} property: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const onLoad = (autocompleteInstance) => {\r\n        setAutocomplete(autocompleteInstance);\r\n    };\r\n\r\n    const onPlaceChanged = () => {\r\n        if (autocomplete !== null) {\r\n            const place = autocomplete.getPlace();\r\n            if (place.formatted_address) {\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    address: place.formatted_address\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"card border-0 shadow-lg\">\r\n                        <div className=\"card-body p-4 p-md-5\">\r\n                            <h2 className=\"text-center mb-4 text-primary fw-bold\">\r\n                                {isEditMode ? 'Edit Property' : 'Add Property'}\r\n                            </h2>\r\n                            <form id=\"propertyForm\" onSubmit={handleSubmit}>\r\n                                {/* Basic Property Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-house-door me-2\"></i>Basic Details\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Property Type</label>\r\n                                            <select \r\n                                                className={`form-select shadow-sm ${errors.propertyTypeId ? 'is-invalid' : ''}`}\r\n                                                value={formData.propertyTypeId}\r\n                                                onChange={handlePropertyTypeChange}\r\n                                            >\r\n                                                <option value=\"\">Select Property Type</option>\r\n                                                {Object.entries(propertyTypes).map(([id, name]) => (\r\n                                                    <option key={id} value={id}>{name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.propertyTypeId && \r\n                                                <div className=\"invalid-feedback\">{errors.propertyTypeId}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Property Sub-Type</label>\r\n                                            <select \r\n                                                className={`form-select shadow-sm ${errors.subTypeId ? 'is-invalid' : ''}`}\r\n                                                value={formData.subTypeId}\r\n                                                onChange={handleSubTypeChange}\r\n                                            >\r\n                                                <option value=\"\">Select Sub-Type</option>\r\n                                                {subTypesWithIds[formData.propertyTypeId]?.map(subType => (\r\n                                                    <option key={subType.id} value={subType.id}>\r\n                                                        {subType.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.subTypeId && \r\n                                                <div className=\"invalid-feedback\">{errors.subTypeId}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Purpose</label>\r\n                                            <select \r\n                                                className={`form-select shadow-sm ${errors.purpose ? 'is-invalid' : ''}`}\r\n                                                name=\"purpose\"\r\n                                                value={purpose} \r\n                                                onChange={(e) => {\r\n                                                    setPurpose(e.target.value);\r\n                                                    setFormData(prev => ({\r\n                                                        ...prev,\r\n                                                        purpose: e.target.value\r\n                                                    }));\r\n                                                }}\r\n                                            >\r\n                                                <option value=\"\">Select Purpose</option>\r\n                                                <option value=\"Sale\">Sale</option>\r\n                                                <option value=\"Rent\">Rent</option>\r\n                                            </select>\r\n                                            {errors.purpose && \r\n                                                <div className=\"invalid-feedback\">{errors.purpose}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Price</label>\r\n                                            <input \r\n                                                type=\"number\" \r\n                                                className={`form-control shadow-sm ${errors.price ? 'is-invalid' : ''}`}\r\n                                                name=\"price\"\r\n                                                value={formData.price}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter property price\"\r\n                                            />\r\n                                            {errors.price && \r\n                                                <div className=\"invalid-feedback\">{errors.price}</div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Location Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-geo-alt me-2\"></i>Location Details\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">City</label>\r\n                                            <select \r\n                                                className={`form-select shadow-sm ${errors.cityId ? 'is-invalid' : ''}`}\r\n                                                name=\"cityId\"\r\n                                                value={formData.cityId}\r\n                                                onChange={handleInputChange}\r\n                                            >\r\n                                                <option value=\"\">Select City</option>\r\n                                                {citiesWithIds.map(city => (\r\n                                                    <option key={city.id} value={city.id}>\r\n                                                        {city.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.cityId && \r\n                                                <div className=\"invalid-feedback\">{errors.cityId}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <label className=\"form-label fw-semibold\">Address</label>\r\n                                            <LoadScript \r\n                                                googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" \r\n                                                libraries={libraries}\r\n                                            >\r\n                                                <Autocomplete\r\n                                                    onLoad={onLoad}\r\n                                                    onPlaceChanged={onPlaceChanged}\r\n                                                    options={{\r\n                                                        componentRestrictions: { country: \"in\" },\r\n                                                        bounds: getSelectedCityBounds(),\r\n                                                        strictBounds: true,\r\n                                                        types: ['address']\r\n                                                    }}\r\n                                                >\r\n                                                    <input \r\n                                                        type=\"text\" \r\n                                                        className={`form-control shadow-sm ${errors.address ? 'is-invalid' : ''}`}\r\n                                                        placeholder={formData.cityId ? \r\n                                                            `Enter address in ${citiesWithIds.find(city => \r\n                                                                city.id === parseInt(formData.cityId))?.name}` : \r\n                                                            \"First select a city\"}\r\n                                                        value={formData.address || ''}\r\n                                                        onChange={(e) => {\r\n                                                            setFormData(prev => ({\r\n                                                                ...prev,\r\n                                                                address: e.target.value\r\n                                                            }));\r\n                                                        }}\r\n                                                    />\r\n                                                </Autocomplete>\r\n                                            </LoadScript>\r\n                                            {errors.address && \r\n                                                <div className=\"invalid-feedback\">{errors.address}</div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Property Specifications Section */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-list-check me-2\"></i>Property Specifications\r\n                                    </h5>\r\n                                    <div className=\"row\">\r\n                                        {formData.propertyTypeId && renderDynamicFields(formData.propertyTypeId)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Property Description */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-file-text me-2\"></i>Property Description\r\n                                    </h5>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label fw-semibold\">Description</label>\r\n                                        <textarea \r\n                                            className={`form-control shadow-sm ${errors.description ? 'is-invalid' : ''}`}\r\n                                            name=\"description\"\r\n                                            value={formData.description}\r\n                                            onChange={handleInputChange}\r\n                                            rows=\"4\"\r\n                                            placeholder=\"Enter detailed property description including features, amenities, and highlights\"\r\n                                        />\r\n                                        {errors.description && \r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Media Upload */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-images me-2\"></i>Property Images\r\n                                    </h5>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label fw-semibold\">Upload Images</label>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            className={`form-control shadow-sm ${errors.imageUrls ? 'is-invalid' : ''}`}\r\n                                            onChange={handleImageUpload}\r\n                                            accept=\"image/jpeg,image/png,image/jpg\"\r\n                                            multiple \r\n                                        />\r\n                                        {errors.imageUrls && \r\n                                            <div className=\"invalid-feedback\">{errors.imageUrls}</div>\r\n                                        }\r\n                                        <div className=\"form-text mt-2\">\r\n                                            <i className=\"bi bi-info-circle me-1\"></i>\r\n                                            Upload up to 10 images (JPEG, PNG only, max 5MB each)\r\n                                        </div>\r\n                                        {formData.imageUrls && (\r\n                                            <div className=\"mt-3\">\r\n                                                <p className=\"mb-2 fw-semibold\">Uploaded Images:</p>\r\n                                                <div className=\"row g-2\">\r\n                                                    {formData.imageUrls.split(',').map((url, index) => (\r\n                                                        <div key={index} className=\"col-md-3 col-6\">\r\n                                                            <img \r\n                                                                src={url} \r\n                                                                alt={`Property ${index + 1}`} \r\n                                                                className=\"img-thumbnail\"\r\n                                                                style={{ height: '150px', objectFit: 'cover' }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Contact Information */}\r\n                                <div className=\"bg-light p-4 rounded-3 mb-4\">\r\n                                    <h5 className=\"mb-4 text-secondary fw-bold\">\r\n                                        <i className=\"bi bi-person-lines-fill me-2\"></i>Contact Information\r\n                                    </h5>\r\n                                    <div className=\"row g-3\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Owner Contact Number</label>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                className={`form-control shadow-sm ${errors.ownerContactNo ? 'is-invalid' : ''}`}\r\n                                                name=\"ownerContactNo\"\r\n                                                value={formData.ownerContactNo}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter contact number\"\r\n                                            />\r\n                                            {errors.ownerContactNo && \r\n                                                <div className=\"invalid-feedback\">{errors.ownerContactNo}</div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label className=\"form-label fw-semibold\">Owner Contact Email</label>\r\n                                            <input \r\n                                                type=\"email\" \r\n                                                className={`form-control shadow-sm ${errors.ownerContactEmail ? 'is-invalid' : ''}`}\r\n                                                name=\"ownerContactEmail\"\r\n                                                value={formData.ownerContactEmail}\r\n                                                onChange={handleInputChange}\r\n                                                placeholder=\"Enter email address\"\r\n                                            />\r\n                                            {errors.ownerContactEmail && \r\n                                                <div className=\"invalid-feedback\">{errors.ownerContactEmail}</div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg w-100 fw-bold\">\r\n                                    <i className=\"bi bi-check2-circle me-2\"></i>\r\n                                    {isEditMode ? 'Update Property' : 'Submit Property'}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostProperty;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}